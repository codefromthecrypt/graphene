// Code generated by protoc-gen-go. DO NOT EDIT.
// source: beaconrpc.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GenesisTimeResponse struct {
	GenesisTime          uint64   `protobuf:"varint,1,opt,name=GenesisTime,proto3" json:"GenesisTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenesisTimeResponse) Reset()         { *m = GenesisTimeResponse{} }
func (m *GenesisTimeResponse) String() string { return proto.CompactTextString(m) }
func (*GenesisTimeResponse) ProtoMessage()    {}
func (*GenesisTimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{0}
}
func (m *GenesisTimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenesisTimeResponse.Unmarshal(m, b)
}
func (m *GenesisTimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenesisTimeResponse.Marshal(b, m, deterministic)
}
func (dst *GenesisTimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisTimeResponse.Merge(dst, src)
}
func (m *GenesisTimeResponse) XXX_Size() int {
	return xxx_messageInfo_GenesisTimeResponse.Size(m)
}
func (m *GenesisTimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisTimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisTimeResponse proto.InternalMessageInfo

func (m *GenesisTimeResponse) GetGenesisTime() uint64 {
	if m != nil {
		return m.GenesisTime
	}
	return 0
}

type CrosslinkStreamRequest struct {
	ShardID              uint64   `protobuf:"varint,1,opt,name=ShardID,proto3" json:"ShardID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrosslinkStreamRequest) Reset()         { *m = CrosslinkStreamRequest{} }
func (m *CrosslinkStreamRequest) String() string { return proto.CompactTextString(m) }
func (*CrosslinkStreamRequest) ProtoMessage()    {}
func (*CrosslinkStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{1}
}
func (m *CrosslinkStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrosslinkStreamRequest.Unmarshal(m, b)
}
func (m *CrosslinkStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrosslinkStreamRequest.Marshal(b, m, deterministic)
}
func (dst *CrosslinkStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrosslinkStreamRequest.Merge(dst, src)
}
func (m *CrosslinkStreamRequest) XXX_Size() int {
	return xxx_messageInfo_CrosslinkStreamRequest.Size(m)
}
func (m *CrosslinkStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CrosslinkStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CrosslinkStreamRequest proto.InternalMessageInfo

func (m *CrosslinkStreamRequest) GetShardID() uint64 {
	if m != nil {
		return m.ShardID
	}
	return 0
}

type CrosslinkMessage struct {
	BlockHash            []byte   `protobuf:"bytes,1,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	Slot                 uint64   `protobuf:"varint,2,opt,name=Slot,proto3" json:"Slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrosslinkMessage) Reset()         { *m = CrosslinkMessage{} }
func (m *CrosslinkMessage) String() string { return proto.CompactTextString(m) }
func (*CrosslinkMessage) ProtoMessage()    {}
func (*CrosslinkMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{2}
}
func (m *CrosslinkMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrosslinkMessage.Unmarshal(m, b)
}
func (m *CrosslinkMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrosslinkMessage.Marshal(b, m, deterministic)
}
func (dst *CrosslinkMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrosslinkMessage.Merge(dst, src)
}
func (m *CrosslinkMessage) XXX_Size() int {
	return xxx_messageInfo_CrosslinkMessage.Size(m)
}
func (m *CrosslinkMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CrosslinkMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CrosslinkMessage proto.InternalMessageInfo

func (m *CrosslinkMessage) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *CrosslinkMessage) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

type ConnectMessage struct {
	Address              string   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectMessage) Reset()         { *m = ConnectMessage{} }
func (m *ConnectMessage) String() string { return proto.CompactTextString(m) }
func (*ConnectMessage) ProtoMessage()    {}
func (*ConnectMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{3}
}
func (m *ConnectMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectMessage.Unmarshal(m, b)
}
func (m *ConnectMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectMessage.Marshal(b, m, deterministic)
}
func (dst *ConnectMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectMessage.Merge(dst, src)
}
func (m *ConnectMessage) XXX_Size() int {
	return xxx_messageInfo_ConnectMessage.Size(m)
}
func (m *ConnectMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectMessage proto.InternalMessageInfo

func (m *ConnectMessage) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ListeningAddressesResponse struct {
	Addresses            []string `protobuf:"bytes,1,rep,name=Addresses,proto3" json:"Addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListeningAddressesResponse) Reset()         { *m = ListeningAddressesResponse{} }
func (m *ListeningAddressesResponse) String() string { return proto.CompactTextString(m) }
func (*ListeningAddressesResponse) ProtoMessage()    {}
func (*ListeningAddressesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{4}
}
func (m *ListeningAddressesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListeningAddressesResponse.Unmarshal(m, b)
}
func (m *ListeningAddressesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListeningAddressesResponse.Marshal(b, m, deterministic)
}
func (dst *ListeningAddressesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListeningAddressesResponse.Merge(dst, src)
}
func (m *ListeningAddressesResponse) XXX_Size() int {
	return xxx_messageInfo_ListeningAddressesResponse.Size(m)
}
func (m *ListeningAddressesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListeningAddressesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListeningAddressesResponse proto.InternalMessageInfo

func (m *ListeningAddressesResponse) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type GetShardProposerRequest struct {
	ShardID              uint64   `protobuf:"varint,1,opt,name=ShardID,proto3" json:"ShardID,omitempty"`
	Slot                 uint64   `protobuf:"varint,2,opt,name=Slot,proto3" json:"Slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetShardProposerRequest) Reset()         { *m = GetShardProposerRequest{} }
func (m *GetShardProposerRequest) String() string { return proto.CompactTextString(m) }
func (*GetShardProposerRequest) ProtoMessage()    {}
func (*GetShardProposerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{5}
}
func (m *GetShardProposerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetShardProposerRequest.Unmarshal(m, b)
}
func (m *GetShardProposerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetShardProposerRequest.Marshal(b, m, deterministic)
}
func (dst *GetShardProposerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetShardProposerRequest.Merge(dst, src)
}
func (m *GetShardProposerRequest) XXX_Size() int {
	return xxx_messageInfo_GetShardProposerRequest.Size(m)
}
func (m *GetShardProposerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetShardProposerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetShardProposerRequest proto.InternalMessageInfo

func (m *GetShardProposerRequest) GetShardID() uint64 {
	if m != nil {
		return m.ShardID
	}
	return 0
}

func (m *GetShardProposerRequest) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

type ShardProposerResponse struct {
	Proposer             uint32   `protobuf:"varint,1,opt,name=Proposer,proto3" json:"Proposer,omitempty"`
	ProposerPublicKey    []byte   `protobuf:"bytes,2,opt,name=ProposerPublicKey,proto3" json:"ProposerPublicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShardProposerResponse) Reset()         { *m = ShardProposerResponse{} }
func (m *ShardProposerResponse) String() string { return proto.CompactTextString(m) }
func (*ShardProposerResponse) ProtoMessage()    {}
func (*ShardProposerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{6}
}
func (m *ShardProposerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardProposerResponse.Unmarshal(m, b)
}
func (m *ShardProposerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardProposerResponse.Marshal(b, m, deterministic)
}
func (dst *ShardProposerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardProposerResponse.Merge(dst, src)
}
func (m *ShardProposerResponse) XXX_Size() int {
	return xxx_messageInfo_ShardProposerResponse.Size(m)
}
func (m *ShardProposerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardProposerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShardProposerResponse proto.InternalMessageInfo

func (m *ShardProposerResponse) GetProposer() uint32 {
	if m != nil {
		return m.Proposer
	}
	return 0
}

func (m *ShardProposerResponse) GetProposerPublicKey() []byte {
	if m != nil {
		return m.ProposerPublicKey
	}
	return nil
}

type MempoolRequest struct {
	LastBlockHash        []byte   `protobuf:"bytes,1,opt,name=LastBlockHash,proto3" json:"LastBlockHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MempoolRequest) Reset()         { *m = MempoolRequest{} }
func (m *MempoolRequest) String() string { return proto.CompactTextString(m) }
func (*MempoolRequest) ProtoMessage()    {}
func (*MempoolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{7}
}
func (m *MempoolRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MempoolRequest.Unmarshal(m, b)
}
func (m *MempoolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MempoolRequest.Marshal(b, m, deterministic)
}
func (dst *MempoolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MempoolRequest.Merge(dst, src)
}
func (m *MempoolRequest) XXX_Size() int {
	return xxx_messageInfo_MempoolRequest.Size(m)
}
func (m *MempoolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MempoolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MempoolRequest proto.InternalMessageInfo

func (m *MempoolRequest) GetLastBlockHash() []byte {
	if m != nil {
		return m.LastBlockHash
	}
	return nil
}

type GetValidatorRequest struct {
	ID                   uint32   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetValidatorRequest) Reset()         { *m = GetValidatorRequest{} }
func (m *GetValidatorRequest) String() string { return proto.CompactTextString(m) }
func (*GetValidatorRequest) ProtoMessage()    {}
func (*GetValidatorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{8}
}
func (m *GetValidatorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetValidatorRequest.Unmarshal(m, b)
}
func (m *GetValidatorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetValidatorRequest.Marshal(b, m, deterministic)
}
func (dst *GetValidatorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetValidatorRequest.Merge(dst, src)
}
func (m *GetValidatorRequest) XXX_Size() int {
	return xxx_messageInfo_GetValidatorRequest.Size(m)
}
func (m *GetValidatorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetValidatorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetValidatorRequest proto.InternalMessageInfo

func (m *GetValidatorRequest) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

type GetBlockRequest struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockRequest) Reset()         { *m = GetBlockRequest{} }
func (m *GetBlockRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockRequest) ProtoMessage()    {}
func (*GetBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{9}
}
func (m *GetBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockRequest.Unmarshal(m, b)
}
func (m *GetBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockRequest.Merge(dst, src)
}
func (m *GetBlockRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockRequest.Size(m)
}
func (m *GetBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockRequest proto.InternalMessageInfo

func (m *GetBlockRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type GetBlockResponse struct {
	Block                *Block   `protobuf:"bytes,1,opt,name=Block,proto3" json:"Block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockResponse) Reset()         { *m = GetBlockResponse{} }
func (m *GetBlockResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockResponse) ProtoMessage()    {}
func (*GetBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{10}
}
func (m *GetBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockResponse.Unmarshal(m, b)
}
func (m *GetBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockResponse.Marshal(b, m, deterministic)
}
func (dst *GetBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockResponse.Merge(dst, src)
}
func (m *GetBlockResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockResponse.Size(m)
}
func (m *GetBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockResponse proto.InternalMessageInfo

func (m *GetBlockResponse) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type GetProposerForSlotRequest struct {
	Slot                 uint64   `protobuf:"varint,1,opt,name=Slot,proto3" json:"Slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProposerForSlotRequest) Reset()         { *m = GetProposerForSlotRequest{} }
func (m *GetProposerForSlotRequest) String() string { return proto.CompactTextString(m) }
func (*GetProposerForSlotRequest) ProtoMessage()    {}
func (*GetProposerForSlotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{11}
}
func (m *GetProposerForSlotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProposerForSlotRequest.Unmarshal(m, b)
}
func (m *GetProposerForSlotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProposerForSlotRequest.Marshal(b, m, deterministic)
}
func (dst *GetProposerForSlotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProposerForSlotRequest.Merge(dst, src)
}
func (m *GetProposerForSlotRequest) XXX_Size() int {
	return xxx_messageInfo_GetProposerForSlotRequest.Size(m)
}
func (m *GetProposerForSlotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProposerForSlotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProposerForSlotRequest proto.InternalMessageInfo

func (m *GetProposerForSlotRequest) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

type GetProposerForSlotResponse struct {
	Proposer             uint32   `protobuf:"varint,1,opt,name=Proposer,proto3" json:"Proposer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProposerForSlotResponse) Reset()         { *m = GetProposerForSlotResponse{} }
func (m *GetProposerForSlotResponse) String() string { return proto.CompactTextString(m) }
func (*GetProposerForSlotResponse) ProtoMessage()    {}
func (*GetProposerForSlotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{12}
}
func (m *GetProposerForSlotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProposerForSlotResponse.Unmarshal(m, b)
}
func (m *GetProposerForSlotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProposerForSlotResponse.Marshal(b, m, deterministic)
}
func (dst *GetProposerForSlotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProposerForSlotResponse.Merge(dst, src)
}
func (m *GetProposerForSlotResponse) XXX_Size() int {
	return xxx_messageInfo_GetProposerForSlotResponse.Size(m)
}
func (m *GetProposerForSlotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProposerForSlotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProposerForSlotResponse proto.InternalMessageInfo

func (m *GetProposerForSlotResponse) GetProposer() uint32 {
	if m != nil {
		return m.Proposer
	}
	return 0
}

type EpochInformationRequest struct {
	EpochIndex           uint64   `protobuf:"varint,1,opt,name=EpochIndex,proto3" json:"EpochIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EpochInformationRequest) Reset()         { *m = EpochInformationRequest{} }
func (m *EpochInformationRequest) String() string { return proto.CompactTextString(m) }
func (*EpochInformationRequest) ProtoMessage()    {}
func (*EpochInformationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{13}
}
func (m *EpochInformationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EpochInformationRequest.Unmarshal(m, b)
}
func (m *EpochInformationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EpochInformationRequest.Marshal(b, m, deterministic)
}
func (dst *EpochInformationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EpochInformationRequest.Merge(dst, src)
}
func (m *EpochInformationRequest) XXX_Size() int {
	return xxx_messageInfo_EpochInformationRequest.Size(m)
}
func (m *EpochInformationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EpochInformationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EpochInformationRequest proto.InternalMessageInfo

func (m *EpochInformationRequest) GetEpochIndex() uint64 {
	if m != nil {
		return m.EpochIndex
	}
	return 0
}

type EpochInformationResponse struct {
	HasEpochInformation  bool              `protobuf:"varint,1,opt,name=HasEpochInformation,proto3" json:"HasEpochInformation,omitempty"`
	Information          *EpochInformation `protobuf:"bytes,2,opt,name=Information,proto3" json:"Information,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EpochInformationResponse) Reset()         { *m = EpochInformationResponse{} }
func (m *EpochInformationResponse) String() string { return proto.CompactTextString(m) }
func (*EpochInformationResponse) ProtoMessage()    {}
func (*EpochInformationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{14}
}
func (m *EpochInformationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EpochInformationResponse.Unmarshal(m, b)
}
func (m *EpochInformationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EpochInformationResponse.Marshal(b, m, deterministic)
}
func (dst *EpochInformationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EpochInformationResponse.Merge(dst, src)
}
func (m *EpochInformationResponse) XXX_Size() int {
	return xxx_messageInfo_EpochInformationResponse.Size(m)
}
func (m *EpochInformationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EpochInformationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EpochInformationResponse proto.InternalMessageInfo

func (m *EpochInformationResponse) GetHasEpochInformation() bool {
	if m != nil {
		return m.HasEpochInformation
	}
	return false
}

func (m *EpochInformationResponse) GetInformation() *EpochInformation {
	if m != nil {
		return m.Information
	}
	return nil
}

type EpochInformation struct {
	ShardCommitteesForSlots     []*ShardCommitteesForSlot `protobuf:"bytes,1,rep,name=ShardCommitteesForSlots,proto3" json:"ShardCommitteesForSlots,omitempty"`
	Slot                        int64                     `protobuf:"varint,2,opt,name=Slot,proto3" json:"Slot,omitempty"`
	LatestCrosslinks            []*Crosslink              `protobuf:"bytes,3,rep,name=LatestCrosslinks,proto3" json:"LatestCrosslinks,omitempty"`
	JustifiedEpoch              uint64                    `protobuf:"varint,4,opt,name=JustifiedEpoch,proto3" json:"JustifiedEpoch,omitempty"`
	JustifiedHash               []byte                    `protobuf:"bytes,5,opt,name=JustifiedHash,proto3" json:"JustifiedHash,omitempty"`
	TargetHash                  []byte                    `protobuf:"bytes,6,opt,name=TargetHash,proto3" json:"TargetHash,omitempty"`
	PreviousTargetHash          []byte                    `protobuf:"bytes,7,opt,name=PreviousTargetHash,proto3" json:"PreviousTargetHash,omitempty"`
	PreviousJustifiedEpoch      uint64                    `protobuf:"varint,8,opt,name=PreviousJustifiedEpoch,proto3" json:"PreviousJustifiedEpoch,omitempty"`
	PreviousJustifiedHash       []byte                    `protobuf:"bytes,9,opt,name=PreviousJustifiedHash,proto3" json:"PreviousJustifiedHash,omitempty"`
	PreviousCrosslinks          []*Crosslink              `protobuf:"bytes,10,rep,name=PreviousCrosslinks,proto3" json:"PreviousCrosslinks,omitempty"`
	ShardCommitteesForNextEpoch []*ShardCommitteesForSlot `protobuf:"bytes,11,rep,name=ShardCommitteesForNextEpoch,proto3" json:"ShardCommitteesForNextEpoch,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                  `json:"-"`
	XXX_unrecognized            []byte                    `json:"-"`
	XXX_sizecache               int32                     `json:"-"`
}

func (m *EpochInformation) Reset()         { *m = EpochInformation{} }
func (m *EpochInformation) String() string { return proto.CompactTextString(m) }
func (*EpochInformation) ProtoMessage()    {}
func (*EpochInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{15}
}
func (m *EpochInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EpochInformation.Unmarshal(m, b)
}
func (m *EpochInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EpochInformation.Marshal(b, m, deterministic)
}
func (dst *EpochInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EpochInformation.Merge(dst, src)
}
func (m *EpochInformation) XXX_Size() int {
	return xxx_messageInfo_EpochInformation.Size(m)
}
func (m *EpochInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_EpochInformation.DiscardUnknown(m)
}

var xxx_messageInfo_EpochInformation proto.InternalMessageInfo

func (m *EpochInformation) GetShardCommitteesForSlots() []*ShardCommitteesForSlot {
	if m != nil {
		return m.ShardCommitteesForSlots
	}
	return nil
}

func (m *EpochInformation) GetSlot() int64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *EpochInformation) GetLatestCrosslinks() []*Crosslink {
	if m != nil {
		return m.LatestCrosslinks
	}
	return nil
}

func (m *EpochInformation) GetJustifiedEpoch() uint64 {
	if m != nil {
		return m.JustifiedEpoch
	}
	return 0
}

func (m *EpochInformation) GetJustifiedHash() []byte {
	if m != nil {
		return m.JustifiedHash
	}
	return nil
}

func (m *EpochInformation) GetTargetHash() []byte {
	if m != nil {
		return m.TargetHash
	}
	return nil
}

func (m *EpochInformation) GetPreviousTargetHash() []byte {
	if m != nil {
		return m.PreviousTargetHash
	}
	return nil
}

func (m *EpochInformation) GetPreviousJustifiedEpoch() uint64 {
	if m != nil {
		return m.PreviousJustifiedEpoch
	}
	return 0
}

func (m *EpochInformation) GetPreviousJustifiedHash() []byte {
	if m != nil {
		return m.PreviousJustifiedHash
	}
	return nil
}

func (m *EpochInformation) GetPreviousCrosslinks() []*Crosslink {
	if m != nil {
		return m.PreviousCrosslinks
	}
	return nil
}

func (m *EpochInformation) GetShardCommitteesForNextEpoch() []*ShardCommitteesForSlot {
	if m != nil {
		return m.ShardCommitteesForNextEpoch
	}
	return nil
}

type DisconnectResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectResponse) Reset()         { *m = DisconnectResponse{} }
func (m *DisconnectResponse) String() string { return proto.CompactTextString(m) }
func (*DisconnectResponse) ProtoMessage()    {}
func (*DisconnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{16}
}
func (m *DisconnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectResponse.Unmarshal(m, b)
}
func (m *DisconnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectResponse.Marshal(b, m, deterministic)
}
func (dst *DisconnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectResponse.Merge(dst, src)
}
func (m *DisconnectResponse) XXX_Size() int {
	return xxx_messageInfo_DisconnectResponse.Size(m)
}
func (m *DisconnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectResponse proto.InternalMessageInfo

func (m *DisconnectResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type GetCommitteesForSlotRequest struct {
	Slot                 uint64   `protobuf:"varint,1,opt,name=Slot,proto3" json:"Slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCommitteesForSlotRequest) Reset()         { *m = GetCommitteesForSlotRequest{} }
func (m *GetCommitteesForSlotRequest) String() string { return proto.CompactTextString(m) }
func (*GetCommitteesForSlotRequest) ProtoMessage()    {}
func (*GetCommitteesForSlotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{17}
}
func (m *GetCommitteesForSlotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommitteesForSlotRequest.Unmarshal(m, b)
}
func (m *GetCommitteesForSlotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommitteesForSlotRequest.Marshal(b, m, deterministic)
}
func (dst *GetCommitteesForSlotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommitteesForSlotRequest.Merge(dst, src)
}
func (m *GetCommitteesForSlotRequest) XXX_Size() int {
	return xxx_messageInfo_GetCommitteesForSlotRequest.Size(m)
}
func (m *GetCommitteesForSlotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommitteesForSlotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommitteesForSlotRequest proto.InternalMessageInfo

func (m *GetCommitteesForSlotRequest) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

type GetSlotAndShardAssignmentRequest struct {
	ValidatorID          uint32   `protobuf:"varint,1,opt,name=ValidatorID,proto3" json:"ValidatorID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSlotAndShardAssignmentRequest) Reset()         { *m = GetSlotAndShardAssignmentRequest{} }
func (m *GetSlotAndShardAssignmentRequest) String() string { return proto.CompactTextString(m) }
func (*GetSlotAndShardAssignmentRequest) ProtoMessage()    {}
func (*GetSlotAndShardAssignmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{18}
}
func (m *GetSlotAndShardAssignmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSlotAndShardAssignmentRequest.Unmarshal(m, b)
}
func (m *GetSlotAndShardAssignmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSlotAndShardAssignmentRequest.Marshal(b, m, deterministic)
}
func (dst *GetSlotAndShardAssignmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSlotAndShardAssignmentRequest.Merge(dst, src)
}
func (m *GetSlotAndShardAssignmentRequest) XXX_Size() int {
	return xxx_messageInfo_GetSlotAndShardAssignmentRequest.Size(m)
}
func (m *GetSlotAndShardAssignmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSlotAndShardAssignmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSlotAndShardAssignmentRequest proto.InternalMessageInfo

func (m *GetSlotAndShardAssignmentRequest) GetValidatorID() uint32 {
	if m != nil {
		return m.ValidatorID
	}
	return 0
}

type SubmitBlockRequest struct {
	Block                *Block   `protobuf:"bytes,1,opt,name=Block,proto3" json:"Block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitBlockRequest) Reset()         { *m = SubmitBlockRequest{} }
func (m *SubmitBlockRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitBlockRequest) ProtoMessage()    {}
func (*SubmitBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{19}
}
func (m *SubmitBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitBlockRequest.Unmarshal(m, b)
}
func (m *SubmitBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitBlockRequest.Marshal(b, m, deterministic)
}
func (dst *SubmitBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitBlockRequest.Merge(dst, src)
}
func (m *SubmitBlockRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitBlockRequest.Size(m)
}
func (m *SubmitBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitBlockRequest proto.InternalMessageInfo

func (m *SubmitBlockRequest) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type SubmitBlockResponse struct {
	BlockHash            []byte   `protobuf:"bytes,1,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitBlockResponse) Reset()         { *m = SubmitBlockResponse{} }
func (m *SubmitBlockResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitBlockResponse) ProtoMessage()    {}
func (*SubmitBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{20}
}
func (m *SubmitBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitBlockResponse.Unmarshal(m, b)
}
func (m *SubmitBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitBlockResponse.Marshal(b, m, deterministic)
}
func (dst *SubmitBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitBlockResponse.Merge(dst, src)
}
func (m *SubmitBlockResponse) XXX_Size() int {
	return xxx_messageInfo_SubmitBlockResponse.Size(m)
}
func (m *SubmitBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitBlockResponse proto.InternalMessageInfo

func (m *SubmitBlockResponse) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

type SlotNumberResponse struct {
	SlotNumber           uint64   `protobuf:"varint,1,opt,name=SlotNumber,proto3" json:"SlotNumber,omitempty"`
	BlockHash            []byte   `protobuf:"bytes,2,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	TipSlot              uint64   `protobuf:"varint,3,opt,name=TipSlot,proto3" json:"TipSlot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlotNumberResponse) Reset()         { *m = SlotNumberResponse{} }
func (m *SlotNumberResponse) String() string { return proto.CompactTextString(m) }
func (*SlotNumberResponse) ProtoMessage()    {}
func (*SlotNumberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{21}
}
func (m *SlotNumberResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlotNumberResponse.Unmarshal(m, b)
}
func (m *SlotNumberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlotNumberResponse.Marshal(b, m, deterministic)
}
func (dst *SlotNumberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlotNumberResponse.Merge(dst, src)
}
func (m *SlotNumberResponse) XXX_Size() int {
	return xxx_messageInfo_SlotNumberResponse.Size(m)
}
func (m *SlotNumberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SlotNumberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SlotNumberResponse proto.InternalMessageInfo

func (m *SlotNumberResponse) GetSlotNumber() uint64 {
	if m != nil {
		return m.SlotNumber
	}
	return 0
}

func (m *SlotNumberResponse) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *SlotNumberResponse) GetTipSlot() uint64 {
	if m != nil {
		return m.TipSlot
	}
	return 0
}

type GetBlockHashRequest struct {
	SlotNumber           uint64   `protobuf:"varint,1,opt,name=SlotNumber,proto3" json:"SlotNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockHashRequest) Reset()         { *m = GetBlockHashRequest{} }
func (m *GetBlockHashRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockHashRequest) ProtoMessage()    {}
func (*GetBlockHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{22}
}
func (m *GetBlockHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockHashRequest.Unmarshal(m, b)
}
func (m *GetBlockHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockHashRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlockHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockHashRequest.Merge(dst, src)
}
func (m *GetBlockHashRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockHashRequest.Size(m)
}
func (m *GetBlockHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockHashRequest proto.InternalMessageInfo

func (m *GetBlockHashRequest) GetSlotNumber() uint64 {
	if m != nil {
		return m.SlotNumber
	}
	return 0
}

type GetBlockHashResponse struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockHashResponse) Reset()         { *m = GetBlockHashResponse{} }
func (m *GetBlockHashResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockHashResponse) ProtoMessage()    {}
func (*GetBlockHashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{23}
}
func (m *GetBlockHashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockHashResponse.Unmarshal(m, b)
}
func (m *GetBlockHashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockHashResponse.Marshal(b, m, deterministic)
}
func (dst *GetBlockHashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockHashResponse.Merge(dst, src)
}
func (m *GetBlockHashResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockHashResponse.Size(m)
}
func (m *GetBlockHashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockHashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockHashResponse proto.InternalMessageInfo

func (m *GetBlockHashResponse) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type GetValidatorAtIndexRequest struct {
	Index                uint32   `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetValidatorAtIndexRequest) Reset()         { *m = GetValidatorAtIndexRequest{} }
func (m *GetValidatorAtIndexRequest) String() string { return proto.CompactTextString(m) }
func (*GetValidatorAtIndexRequest) ProtoMessage()    {}
func (*GetValidatorAtIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{24}
}
func (m *GetValidatorAtIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetValidatorAtIndexRequest.Unmarshal(m, b)
}
func (m *GetValidatorAtIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetValidatorAtIndexRequest.Marshal(b, m, deterministic)
}
func (dst *GetValidatorAtIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetValidatorAtIndexRequest.Merge(dst, src)
}
func (m *GetValidatorAtIndexRequest) XXX_Size() int {
	return xxx_messageInfo_GetValidatorAtIndexRequest.Size(m)
}
func (m *GetValidatorAtIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetValidatorAtIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetValidatorAtIndexRequest proto.InternalMessageInfo

func (m *GetValidatorAtIndexRequest) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type GetValidatorAtIndexResponse struct {
	Validator            *Validator `protobuf:"bytes,1,opt,name=Validator,proto3" json:"Validator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetValidatorAtIndexResponse) Reset()         { *m = GetValidatorAtIndexResponse{} }
func (m *GetValidatorAtIndexResponse) String() string { return proto.CompactTextString(m) }
func (*GetValidatorAtIndexResponse) ProtoMessage()    {}
func (*GetValidatorAtIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{25}
}
func (m *GetValidatorAtIndexResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetValidatorAtIndexResponse.Unmarshal(m, b)
}
func (m *GetValidatorAtIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetValidatorAtIndexResponse.Marshal(b, m, deterministic)
}
func (dst *GetValidatorAtIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetValidatorAtIndexResponse.Merge(dst, src)
}
func (m *GetValidatorAtIndexResponse) XXX_Size() int {
	return xxx_messageInfo_GetValidatorAtIndexResponse.Size(m)
}
func (m *GetValidatorAtIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetValidatorAtIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetValidatorAtIndexResponse proto.InternalMessageInfo

func (m *GetValidatorAtIndexResponse) GetValidator() *Validator {
	if m != nil {
		return m.Validator
	}
	return nil
}

type GetCommitteeValidatorsRequest struct {
	SlotNumber           uint64   `protobuf:"varint,1,opt,name=SlotNumber,proto3" json:"SlotNumber,omitempty"`
	Shard                uint32   `protobuf:"varint,2,opt,name=Shard,proto3" json:"Shard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCommitteeValidatorsRequest) Reset()         { *m = GetCommitteeValidatorsRequest{} }
func (m *GetCommitteeValidatorsRequest) String() string { return proto.CompactTextString(m) }
func (*GetCommitteeValidatorsRequest) ProtoMessage()    {}
func (*GetCommitteeValidatorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{26}
}
func (m *GetCommitteeValidatorsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommitteeValidatorsRequest.Unmarshal(m, b)
}
func (m *GetCommitteeValidatorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommitteeValidatorsRequest.Marshal(b, m, deterministic)
}
func (dst *GetCommitteeValidatorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommitteeValidatorsRequest.Merge(dst, src)
}
func (m *GetCommitteeValidatorsRequest) XXX_Size() int {
	return xxx_messageInfo_GetCommitteeValidatorsRequest.Size(m)
}
func (m *GetCommitteeValidatorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommitteeValidatorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommitteeValidatorsRequest proto.InternalMessageInfo

func (m *GetCommitteeValidatorsRequest) GetSlotNumber() uint64 {
	if m != nil {
		return m.SlotNumber
	}
	return 0
}

func (m *GetCommitteeValidatorsRequest) GetShard() uint32 {
	if m != nil {
		return m.Shard
	}
	return 0
}

type GetStateResponse struct {
	State                *State   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStateResponse) Reset()         { *m = GetStateResponse{} }
func (m *GetStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetStateResponse) ProtoMessage()    {}
func (*GetStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{27}
}
func (m *GetStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStateResponse.Unmarshal(m, b)
}
func (m *GetStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStateResponse.Marshal(b, m, deterministic)
}
func (dst *GetStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStateResponse.Merge(dst, src)
}
func (m *GetStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetStateResponse.Size(m)
}
func (m *GetStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStateResponse proto.InternalMessageInfo

func (m *GetStateResponse) GetState() *State {
	if m != nil {
		return m.State
	}
	return nil
}

type GetStateRootResponse struct {
	StateRoot            []byte   `protobuf:"bytes,1,opt,name=StateRoot,proto3" json:"StateRoot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStateRootResponse) Reset()         { *m = GetStateRootResponse{} }
func (m *GetStateRootResponse) String() string { return proto.CompactTextString(m) }
func (*GetStateRootResponse) ProtoMessage()    {}
func (*GetStateRootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{28}
}
func (m *GetStateRootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStateRootResponse.Unmarshal(m, b)
}
func (m *GetStateRootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStateRootResponse.Marshal(b, m, deterministic)
}
func (dst *GetStateRootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStateRootResponse.Merge(dst, src)
}
func (m *GetStateRootResponse) XXX_Size() int {
	return xxx_messageInfo_GetStateRootResponse.Size(m)
}
func (m *GetStateRootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStateRootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStateRootResponse proto.InternalMessageInfo

func (m *GetStateRootResponse) GetStateRoot() []byte {
	if m != nil {
		return m.StateRoot
	}
	return nil
}

type GetCommitteeValidatorsResponse struct {
	Validators           []*Validator `protobuf:"bytes,1,rep,name=Validators,proto3" json:"Validators,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetCommitteeValidatorsResponse) Reset()         { *m = GetCommitteeValidatorsResponse{} }
func (m *GetCommitteeValidatorsResponse) String() string { return proto.CompactTextString(m) }
func (*GetCommitteeValidatorsResponse) ProtoMessage()    {}
func (*GetCommitteeValidatorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{29}
}
func (m *GetCommitteeValidatorsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommitteeValidatorsResponse.Unmarshal(m, b)
}
func (m *GetCommitteeValidatorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommitteeValidatorsResponse.Marshal(b, m, deterministic)
}
func (dst *GetCommitteeValidatorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommitteeValidatorsResponse.Merge(dst, src)
}
func (m *GetCommitteeValidatorsResponse) XXX_Size() int {
	return xxx_messageInfo_GetCommitteeValidatorsResponse.Size(m)
}
func (m *GetCommitteeValidatorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommitteeValidatorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommitteeValidatorsResponse proto.InternalMessageInfo

func (m *GetCommitteeValidatorsResponse) GetValidators() []*Validator {
	if m != nil {
		return m.Validators
	}
	return nil
}

type GetCommitteeValidatorIndicesResponse struct {
	Validators           []uint32 `protobuf:"varint,1,rep,packed,name=Validators,proto3" json:"Validators,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCommitteeValidatorIndicesResponse) Reset()         { *m = GetCommitteeValidatorIndicesResponse{} }
func (m *GetCommitteeValidatorIndicesResponse) String() string { return proto.CompactTextString(m) }
func (*GetCommitteeValidatorIndicesResponse) ProtoMessage()    {}
func (*GetCommitteeValidatorIndicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_beaconrpc_937578f966076107, []int{30}
}
func (m *GetCommitteeValidatorIndicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommitteeValidatorIndicesResponse.Unmarshal(m, b)
}
func (m *GetCommitteeValidatorIndicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommitteeValidatorIndicesResponse.Marshal(b, m, deterministic)
}
func (dst *GetCommitteeValidatorIndicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommitteeValidatorIndicesResponse.Merge(dst, src)
}
func (m *GetCommitteeValidatorIndicesResponse) XXX_Size() int {
	return xxx_messageInfo_GetCommitteeValidatorIndicesResponse.Size(m)
}
func (m *GetCommitteeValidatorIndicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommitteeValidatorIndicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommitteeValidatorIndicesResponse proto.InternalMessageInfo

func (m *GetCommitteeValidatorIndicesResponse) GetValidators() []uint32 {
	if m != nil {
		return m.Validators
	}
	return nil
}

func init() {
	proto.RegisterType((*GenesisTimeResponse)(nil), "pb.GenesisTimeResponse")
	proto.RegisterType((*CrosslinkStreamRequest)(nil), "pb.CrosslinkStreamRequest")
	proto.RegisterType((*CrosslinkMessage)(nil), "pb.CrosslinkMessage")
	proto.RegisterType((*ConnectMessage)(nil), "pb.ConnectMessage")
	proto.RegisterType((*ListeningAddressesResponse)(nil), "pb.ListeningAddressesResponse")
	proto.RegisterType((*GetShardProposerRequest)(nil), "pb.GetShardProposerRequest")
	proto.RegisterType((*ShardProposerResponse)(nil), "pb.ShardProposerResponse")
	proto.RegisterType((*MempoolRequest)(nil), "pb.MempoolRequest")
	proto.RegisterType((*GetValidatorRequest)(nil), "pb.GetValidatorRequest")
	proto.RegisterType((*GetBlockRequest)(nil), "pb.GetBlockRequest")
	proto.RegisterType((*GetBlockResponse)(nil), "pb.GetBlockResponse")
	proto.RegisterType((*GetProposerForSlotRequest)(nil), "pb.GetProposerForSlotRequest")
	proto.RegisterType((*GetProposerForSlotResponse)(nil), "pb.GetProposerForSlotResponse")
	proto.RegisterType((*EpochInformationRequest)(nil), "pb.EpochInformationRequest")
	proto.RegisterType((*EpochInformationResponse)(nil), "pb.EpochInformationResponse")
	proto.RegisterType((*EpochInformation)(nil), "pb.EpochInformation")
	proto.RegisterType((*DisconnectResponse)(nil), "pb.DisconnectResponse")
	proto.RegisterType((*GetCommitteesForSlotRequest)(nil), "pb.GetCommitteesForSlotRequest")
	proto.RegisterType((*GetSlotAndShardAssignmentRequest)(nil), "pb.GetSlotAndShardAssignmentRequest")
	proto.RegisterType((*SubmitBlockRequest)(nil), "pb.SubmitBlockRequest")
	proto.RegisterType((*SubmitBlockResponse)(nil), "pb.SubmitBlockResponse")
	proto.RegisterType((*SlotNumberResponse)(nil), "pb.SlotNumberResponse")
	proto.RegisterType((*GetBlockHashRequest)(nil), "pb.GetBlockHashRequest")
	proto.RegisterType((*GetBlockHashResponse)(nil), "pb.GetBlockHashResponse")
	proto.RegisterType((*GetValidatorAtIndexRequest)(nil), "pb.GetValidatorAtIndexRequest")
	proto.RegisterType((*GetValidatorAtIndexResponse)(nil), "pb.GetValidatorAtIndexResponse")
	proto.RegisterType((*GetCommitteeValidatorsRequest)(nil), "pb.GetCommitteeValidatorsRequest")
	proto.RegisterType((*GetStateResponse)(nil), "pb.GetStateResponse")
	proto.RegisterType((*GetStateRootResponse)(nil), "pb.GetStateRootResponse")
	proto.RegisterType((*GetCommitteeValidatorsResponse)(nil), "pb.GetCommitteeValidatorsResponse")
	proto.RegisterType((*GetCommitteeValidatorIndicesResponse)(nil), "pb.GetCommitteeValidatorIndicesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BlockchainRPCClient is the client API for BlockchainRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockchainRPCClient interface {
	SubmitBlock(ctx context.Context, in *SubmitBlockRequest, opts ...grpc.CallOption) (*SubmitBlockResponse, error)
	GetSlotNumber(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SlotNumberResponse, error)
	GetBlockHash(ctx context.Context, in *GetBlockHashRequest, opts ...grpc.CallOption) (*GetBlockHashResponse, error)
	GetLastBlockHash(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetBlockHashResponse, error)
	GetState(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetStateResponse, error)
	GetStateRoot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetStateRootResponse, error)
	GetEpochInformation(ctx context.Context, in *EpochInformationRequest, opts ...grpc.CallOption) (*EpochInformationResponse, error)
	GetForkData(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ForkData, error)
	GetProposerForSlot(ctx context.Context, in *GetProposerForSlotRequest, opts ...grpc.CallOption) (*GetProposerForSlotResponse, error)
	GetShardProposerForSlot(ctx context.Context, in *GetShardProposerRequest, opts ...grpc.CallOption) (*ShardProposerResponse, error)
	GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error)
	SubmitAttestation(ctx context.Context, in *Attestation, opts ...grpc.CallOption) (*empty.Empty, error)
	GetMempool(ctx context.Context, in *MempoolRequest, opts ...grpc.CallOption) (*BlockBody, error)
	GetValidatorInformation(ctx context.Context, in *GetValidatorRequest, opts ...grpc.CallOption) (*Validator, error)
	GetListeningAddresses(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListeningAddressesResponse, error)
	Connect(ctx context.Context, in *ConnectMessage, opts ...grpc.CallOption) (*empty.Empty, error)
	CrosslinkStream(ctx context.Context, in *CrosslinkStreamRequest, opts ...grpc.CallOption) (BlockchainRPC_CrosslinkStreamClient, error)
	GetGenesisTime(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GenesisTimeResponse, error)
}

type blockchainRPCClient struct {
	cc *grpc.ClientConn
}

func NewBlockchainRPCClient(cc *grpc.ClientConn) BlockchainRPCClient {
	return &blockchainRPCClient{cc}
}

func (c *blockchainRPCClient) SubmitBlock(ctx context.Context, in *SubmitBlockRequest, opts ...grpc.CallOption) (*SubmitBlockResponse, error) {
	out := new(SubmitBlockResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/SubmitBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetSlotNumber(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SlotNumberResponse, error) {
	out := new(SlotNumberResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetSlotNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetBlockHash(ctx context.Context, in *GetBlockHashRequest, opts ...grpc.CallOption) (*GetBlockHashResponse, error) {
	out := new(GetBlockHashResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetBlockHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetLastBlockHash(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetBlockHashResponse, error) {
	out := new(GetBlockHashResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetLastBlockHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetState(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetStateResponse, error) {
	out := new(GetStateResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetStateRoot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetStateRootResponse, error) {
	out := new(GetStateRootResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetStateRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetEpochInformation(ctx context.Context, in *EpochInformationRequest, opts ...grpc.CallOption) (*EpochInformationResponse, error) {
	out := new(EpochInformationResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetEpochInformation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetForkData(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ForkData, error) {
	out := new(ForkData)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetForkData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetProposerForSlot(ctx context.Context, in *GetProposerForSlotRequest, opts ...grpc.CallOption) (*GetProposerForSlotResponse, error) {
	out := new(GetProposerForSlotResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetProposerForSlot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetShardProposerForSlot(ctx context.Context, in *GetShardProposerRequest, opts ...grpc.CallOption) (*ShardProposerResponse, error) {
	out := new(ShardProposerResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetShardProposerForSlot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error) {
	out := new(GetBlockResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) SubmitAttestation(ctx context.Context, in *Attestation, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/SubmitAttestation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetMempool(ctx context.Context, in *MempoolRequest, opts ...grpc.CallOption) (*BlockBody, error) {
	out := new(BlockBody)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetMempool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetValidatorInformation(ctx context.Context, in *GetValidatorRequest, opts ...grpc.CallOption) (*Validator, error) {
	out := new(Validator)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetValidatorInformation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetListeningAddresses(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListeningAddressesResponse, error) {
	out := new(ListeningAddressesResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetListeningAddresses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) Connect(ctx context.Context, in *ConnectMessage, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) CrosslinkStream(ctx context.Context, in *CrosslinkStreamRequest, opts ...grpc.CallOption) (BlockchainRPC_CrosslinkStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BlockchainRPC_serviceDesc.Streams[0], "/pb.BlockchainRPC/CrosslinkStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &blockchainRPCCrosslinkStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BlockchainRPC_CrosslinkStreamClient interface {
	Recv() (*CrosslinkMessage, error)
	grpc.ClientStream
}

type blockchainRPCCrosslinkStreamClient struct {
	grpc.ClientStream
}

func (x *blockchainRPCCrosslinkStreamClient) Recv() (*CrosslinkMessage, error) {
	m := new(CrosslinkMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *blockchainRPCClient) GetGenesisTime(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GenesisTimeResponse, error) {
	out := new(GenesisTimeResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetGenesisTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockchainRPCServer is the server API for BlockchainRPC service.
type BlockchainRPCServer interface {
	SubmitBlock(context.Context, *SubmitBlockRequest) (*SubmitBlockResponse, error)
	GetSlotNumber(context.Context, *empty.Empty) (*SlotNumberResponse, error)
	GetBlockHash(context.Context, *GetBlockHashRequest) (*GetBlockHashResponse, error)
	GetLastBlockHash(context.Context, *empty.Empty) (*GetBlockHashResponse, error)
	GetState(context.Context, *empty.Empty) (*GetStateResponse, error)
	GetStateRoot(context.Context, *empty.Empty) (*GetStateRootResponse, error)
	GetEpochInformation(context.Context, *EpochInformationRequest) (*EpochInformationResponse, error)
	GetForkData(context.Context, *empty.Empty) (*ForkData, error)
	GetProposerForSlot(context.Context, *GetProposerForSlotRequest) (*GetProposerForSlotResponse, error)
	GetShardProposerForSlot(context.Context, *GetShardProposerRequest) (*ShardProposerResponse, error)
	GetBlock(context.Context, *GetBlockRequest) (*GetBlockResponse, error)
	SubmitAttestation(context.Context, *Attestation) (*empty.Empty, error)
	GetMempool(context.Context, *MempoolRequest) (*BlockBody, error)
	GetValidatorInformation(context.Context, *GetValidatorRequest) (*Validator, error)
	GetListeningAddresses(context.Context, *empty.Empty) (*ListeningAddressesResponse, error)
	Connect(context.Context, *ConnectMessage) (*empty.Empty, error)
	CrosslinkStream(*CrosslinkStreamRequest, BlockchainRPC_CrosslinkStreamServer) error
	GetGenesisTime(context.Context, *empty.Empty) (*GenesisTimeResponse, error)
}

func RegisterBlockchainRPCServer(s *grpc.Server, srv BlockchainRPCServer) {
	s.RegisterService(&_BlockchainRPC_serviceDesc, srv)
}

func _BlockchainRPC_SubmitBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).SubmitBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/SubmitBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).SubmitBlock(ctx, req.(*SubmitBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetSlotNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetSlotNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetSlotNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetSlotNumber(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetBlockHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetBlockHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetBlockHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetBlockHash(ctx, req.(*GetBlockHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetLastBlockHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetLastBlockHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetLastBlockHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetLastBlockHash(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetState(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetStateRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetStateRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetStateRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetStateRoot(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetEpochInformation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EpochInformationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetEpochInformation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetEpochInformation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetEpochInformation(ctx, req.(*EpochInformationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetForkData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetForkData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetForkData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetForkData(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetProposerForSlot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProposerForSlotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetProposerForSlot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetProposerForSlot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetProposerForSlot(ctx, req.(*GetProposerForSlotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetShardProposerForSlot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShardProposerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetShardProposerForSlot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetShardProposerForSlot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetShardProposerForSlot(ctx, req.(*GetShardProposerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetBlock(ctx, req.(*GetBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_SubmitAttestation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Attestation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).SubmitAttestation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/SubmitAttestation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).SubmitAttestation(ctx, req.(*Attestation))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetMempool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MempoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetMempool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetMempool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetMempool(ctx, req.(*MempoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetValidatorInformation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetValidatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetValidatorInformation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetValidatorInformation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetValidatorInformation(ctx, req.(*GetValidatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetListeningAddresses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetListeningAddresses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetListeningAddresses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetListeningAddresses(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).Connect(ctx, req.(*ConnectMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_CrosslinkStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CrosslinkStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BlockchainRPCServer).CrosslinkStream(m, &blockchainRPCCrosslinkStreamServer{stream})
}

type BlockchainRPC_CrosslinkStreamServer interface {
	Send(*CrosslinkMessage) error
	grpc.ServerStream
}

type blockchainRPCCrosslinkStreamServer struct {
	grpc.ServerStream
}

func (x *blockchainRPCCrosslinkStreamServer) Send(m *CrosslinkMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _BlockchainRPC_GetGenesisTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetGenesisTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetGenesisTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetGenesisTime(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlockchainRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.BlockchainRPC",
	HandlerType: (*BlockchainRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitBlock",
			Handler:    _BlockchainRPC_SubmitBlock_Handler,
		},
		{
			MethodName: "GetSlotNumber",
			Handler:    _BlockchainRPC_GetSlotNumber_Handler,
		},
		{
			MethodName: "GetBlockHash",
			Handler:    _BlockchainRPC_GetBlockHash_Handler,
		},
		{
			MethodName: "GetLastBlockHash",
			Handler:    _BlockchainRPC_GetLastBlockHash_Handler,
		},
		{
			MethodName: "GetState",
			Handler:    _BlockchainRPC_GetState_Handler,
		},
		{
			MethodName: "GetStateRoot",
			Handler:    _BlockchainRPC_GetStateRoot_Handler,
		},
		{
			MethodName: "GetEpochInformation",
			Handler:    _BlockchainRPC_GetEpochInformation_Handler,
		},
		{
			MethodName: "GetForkData",
			Handler:    _BlockchainRPC_GetForkData_Handler,
		},
		{
			MethodName: "GetProposerForSlot",
			Handler:    _BlockchainRPC_GetProposerForSlot_Handler,
		},
		{
			MethodName: "GetShardProposerForSlot",
			Handler:    _BlockchainRPC_GetShardProposerForSlot_Handler,
		},
		{
			MethodName: "GetBlock",
			Handler:    _BlockchainRPC_GetBlock_Handler,
		},
		{
			MethodName: "SubmitAttestation",
			Handler:    _BlockchainRPC_SubmitAttestation_Handler,
		},
		{
			MethodName: "GetMempool",
			Handler:    _BlockchainRPC_GetMempool_Handler,
		},
		{
			MethodName: "GetValidatorInformation",
			Handler:    _BlockchainRPC_GetValidatorInformation_Handler,
		},
		{
			MethodName: "GetListeningAddresses",
			Handler:    _BlockchainRPC_GetListeningAddresses_Handler,
		},
		{
			MethodName: "Connect",
			Handler:    _BlockchainRPC_Connect_Handler,
		},
		{
			MethodName: "GetGenesisTime",
			Handler:    _BlockchainRPC_GetGenesisTime_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CrosslinkStream",
			Handler:       _BlockchainRPC_CrosslinkStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "beaconrpc.proto",
}

func init() { proto.RegisterFile("beaconrpc.proto", fileDescriptor_beaconrpc_937578f966076107) }

var fileDescriptor_beaconrpc_937578f966076107 = []byte{
	// 1226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x57, 0x5b, 0x53, 0xdb, 0x46,
	0x14, 0x1e, 0x1b, 0x08, 0xf8, 0x18, 0x03, 0x59, 0x6e, 0x8e, 0x20, 0x94, 0xd9, 0x49, 0x3a, 0x99,
	0xb4, 0x35, 0x29, 0x04, 0x9a, 0x74, 0x7a, 0x73, 0x30, 0x38, 0xa4, 0x24, 0xa1, 0x32, 0xed, 0x53,
	0x5f, 0x64, 0x79, 0x31, 0x1a, 0x2c, 0xad, 0xab, 0x5d, 0x77, 0xc2, 0x7b, 0xff, 0x57, 0xff, 0x4a,
	0x7f, 0x4a, 0x47, 0x67, 0x57, 0xd2, 0xca, 0x92, 0x20, 0x6f, 0xda, 0xef, 0xdc, 0x2f, 0x3a, 0x7b,
	0x16, 0x96, 0xfb, 0xcc, 0x71, 0x79, 0x10, 0x8e, 0xdd, 0xd6, 0x38, 0xe4, 0x92, 0x93, 0xea, 0xb8,
	0x6f, 0x6d, 0x0d, 0x39, 0x1f, 0x8e, 0xd8, 0x1e, 0x22, 0xfd, 0xc9, 0xd5, 0x1e, 0xf3, 0xc7, 0xf2,
	0x56, 0x31, 0x58, 0x8b, 0x2e, 0xf7, 0x7d, 0x1e, 0xa8, 0x13, 0xfd, 0x0e, 0x56, 0xbb, 0x2c, 0x60,
	0xc2, 0x13, 0x97, 0x9e, 0xcf, 0x6c, 0x26, 0xc6, 0x3c, 0x10, 0x8c, 0xec, 0x42, 0xdd, 0x80, 0x9b,
	0x95, 0xdd, 0xca, 0xb3, 0x59, 0xdb, 0x84, 0xe8, 0x3e, 0x6c, 0x1c, 0x87, 0x5c, 0x88, 0x91, 0x17,
	0xdc, 0xf4, 0x64, 0xc8, 0x1c, 0xdf, 0x66, 0x7f, 0x4d, 0x98, 0x90, 0xa4, 0x09, 0xf3, 0xbd, 0x6b,
	0x27, 0x1c, 0x9c, 0x75, 0xb4, 0x5c, 0x7c, 0xa4, 0x1d, 0x58, 0x49, 0x64, 0xde, 0x33, 0x21, 0x9c,
	0x21, 0x23, 0xdb, 0x50, 0x7b, 0x33, 0xe2, 0xee, 0xcd, 0x5b, 0x47, 0x5c, 0x23, 0xff, 0xa2, 0x9d,
	0x02, 0x84, 0xc0, 0x6c, 0x6f, 0xc4, 0x65, 0xb3, 0x8a, 0x8a, 0xf0, 0x9b, 0x3e, 0x87, 0xa5, 0x63,
	0x1e, 0x04, 0xcc, 0x95, 0xb1, 0x8e, 0x26, 0xcc, 0xb7, 0x07, 0x83, 0x90, 0x09, 0x81, 0x1a, 0x6a,
	0x76, 0x7c, 0xa4, 0xdf, 0x83, 0x75, 0xee, 0x09, 0xc9, 0x02, 0x2f, 0x18, 0x6a, 0x8c, 0x89, 0x24,
	0xca, 0x6d, 0xa8, 0x25, 0x60, 0xb3, 0xb2, 0x3b, 0xf3, 0xac, 0x66, 0xa7, 0x00, 0xed, 0xc2, 0x66,
	0x97, 0x49, 0xf4, 0xfd, 0x22, 0xe4, 0x63, 0x2e, 0x58, 0x78, 0x6f, 0x88, 0x85, 0x0e, 0x3b, 0xb0,
	0x3e, 0xa5, 0x45, 0xdb, 0xb7, 0x60, 0x21, 0xc6, 0x50, 0x4f, 0xc3, 0x4e, 0xce, 0xe4, 0x6b, 0x78,
	0x18, 0x7f, 0x5f, 0x4c, 0xfa, 0x23, 0xcf, 0xfd, 0x95, 0xdd, 0xa2, 0xd6, 0x45, 0x3b, 0x4f, 0xa0,
	0x47, 0xb0, 0xf4, 0x9e, 0xf9, 0x63, 0xce, 0x47, 0xb1, 0x8b, 0x4f, 0xa0, 0x71, 0xee, 0x08, 0x39,
	0x9d, 0xdb, 0x2c, 0x48, 0x9f, 0x46, 0xe5, 0x97, 0x7f, 0x38, 0x23, 0x6f, 0xe0, 0x48, 0x9e, 0xc4,
	0xb7, 0x04, 0x55, 0x1d, 0x5a, 0xc3, 0xae, 0x9e, 0x75, 0xe8, 0x53, 0x58, 0xee, 0x32, 0x25, 0x16,
	0xb3, 0x10, 0x98, 0x35, 0xd4, 0xe2, 0x37, 0x3d, 0x80, 0x95, 0x94, 0x4d, 0xc7, 0xf8, 0x05, 0xcc,
	0x21, 0x80, 0x8c, 0xf5, 0xfd, 0x5a, 0x6b, 0xdc, 0x6f, 0x29, 0x0e, 0x85, 0xd3, 0x3d, 0x78, 0xd4,
	0x65, 0x32, 0x0e, 0xe9, 0x94, 0x87, 0x51, 0xce, 0x0c, 0x2b, 0x98, 0xce, 0x8a, 0x91, 0xce, 0x57,
	0x60, 0x15, 0x09, 0xdc, 0x9f, 0x53, 0xfa, 0x1a, 0x36, 0x4f, 0xc6, 0xdc, 0xbd, 0x3e, 0x0b, 0xae,
	0x78, 0xe8, 0x3b, 0xd2, 0xe3, 0x41, 0x6c, 0x68, 0x07, 0x40, 0x93, 0x06, 0xec, 0x93, 0x36, 0x67,
	0x20, 0xf4, 0x9f, 0x0a, 0x34, 0xf3, 0xb2, 0xda, 0xe6, 0x0b, 0x58, 0x7d, 0xeb, 0x88, 0x69, 0x32,
	0x6a, 0x59, 0xb0, 0x8b, 0x48, 0xe4, 0x08, 0xea, 0x26, 0x67, 0x15, 0x73, 0xb3, 0x16, 0xe5, 0x26,
	0x67, 0xc4, 0x64, 0xa4, 0xff, 0xcd, 0xc2, 0x4a, 0x4e, 0xd9, 0x25, 0x6c, 0x62, 0x7f, 0x1d, 0x73,
	0xdf, 0xf7, 0xa4, 0x64, 0x4c, 0xe8, 0xa4, 0xa8, 0xa6, 0xae, 0xef, 0x5b, 0x91, 0xe2, 0x62, 0x16,
	0xbb, 0x4c, 0x34, 0xd3, 0xc9, 0x33, 0x2a, 0xf5, 0xe4, 0x35, 0xac, 0x9c, 0x3b, 0x92, 0x09, 0x99,
	0xfc, 0xc6, 0xa2, 0x39, 0x83, 0x26, 0x1a, 0x91, 0x89, 0x04, 0xb5, 0x73, 0x6c, 0xe4, 0x4b, 0x58,
	0x7a, 0x37, 0x11, 0xd2, 0xbb, 0xf2, 0xd8, 0x00, 0x23, 0x68, 0xce, 0x62, 0x92, 0xa7, 0xd0, 0xa8,
	0x6f, 0x13, 0x04, 0x1b, 0x6c, 0x4e, 0xf5, 0x6d, 0x06, 0x8c, 0xca, 0x75, 0xe9, 0x84, 0x43, 0x26,
	0x91, 0xe5, 0x01, 0xb2, 0x18, 0x08, 0x69, 0x01, 0xb9, 0x08, 0xd9, 0xdf, 0x1e, 0x9f, 0x08, 0x83,
	0x6f, 0x1e, 0xf9, 0x0a, 0x28, 0xe4, 0x08, 0x36, 0x62, 0x74, 0xca, 0xcb, 0x05, 0xf4, 0xb2, 0x84,
	0x4a, 0x5e, 0xc2, 0x7a, 0x8e, 0x82, 0xa6, 0x6a, 0x68, 0xaa, 0x98, 0x48, 0x7e, 0x4c, 0xbd, 0x33,
	0x12, 0x09, 0x45, 0x89, 0x2c, 0x60, 0x24, 0x7f, 0xc2, 0x56, 0xbe, 0x68, 0x1f, 0xd8, 0x27, 0xa9,
	0x3c, 0xae, 0xdf, 0x5b, 0xf3, 0xbb, 0xc4, 0x69, 0x0b, 0x48, 0xc7, 0x13, 0xae, 0x9a, 0xb0, 0x49,
	0x8b, 0x47, 0x13, 0x6f, 0xe2, 0xba, 0xf1, 0x88, 0x5d, 0xb0, 0xe3, 0x23, 0xfd, 0x16, 0xb6, 0xba,
	0x4c, 0xe6, 0x8d, 0xdc, 0xf1, 0x07, 0x77, 0x60, 0x37, 0x9a, 0xac, 0x23, 0x2e, 0xdb, 0xc1, 0x00,
	0x7d, 0x69, 0x0b, 0xe1, 0x0d, 0x03, 0x9f, 0x05, 0x89, 0xdc, 0x2e, 0xd4, 0x93, 0xb1, 0x94, 0xcc,
	0x22, 0x13, 0xa2, 0x87, 0x40, 0x7a, 0x93, 0xbe, 0xef, 0x65, 0xe7, 0xd2, 0xbd, 0xf3, 0xe6, 0x00,
	0x56, 0x33, 0x62, 0xe9, 0x5d, 0x50, 0x7e, 0x0f, 0xd1, 0x11, 0x90, 0xc8, 0xdd, 0x0f, 0x13, 0xbf,
	0x6f, 0xcc, 0xef, 0x1d, 0x80, 0x14, 0x8d, 0x87, 0x46, 0x8a, 0x64, 0x75, 0x56, 0xa7, 0xef, 0xb6,
	0x26, 0xcc, 0x5f, 0x7a, 0x63, 0x4c, 0xce, 0x8c, 0xba, 0x44, 0xf4, 0x91, 0x1e, 0xe2, 0x54, 0x4e,
	0x38, 0x8d, 0x19, 0x75, 0x97, 0x39, 0xfa, 0x1c, 0xd6, 0xb2, 0x62, 0xda, 0xcd, 0xa2, 0x51, 0xbd,
	0x8f, 0x43, 0x34, 0x49, 0x67, 0x5b, 0xe2, 0x98, 0x8b, 0x2d, 0xad, 0xc1, 0x5c, 0x3a, 0x08, 0x1b,
	0xb6, 0x3a, 0xd0, 0x77, 0x58, 0xe9, 0xbc, 0x8c, 0x36, 0xf3, 0x15, 0xd4, 0x12, 0x9a, 0xce, 0x3e,
	0x36, 0x73, 0x7a, 0xbb, 0xa4, 0x74, 0xfa, 0x3b, 0x3c, 0x36, 0xbb, 0x26, 0x21, 0x88, 0xcf, 0x0c,
	0x36, 0x72, 0x11, 0x3b, 0x07, 0xf3, 0xda, 0xb0, 0xd5, 0x41, 0xdf, 0x40, 0x3d, 0xe9, 0x48, 0x66,
	0xde, 0x40, 0x22, 0x02, 0xcc, 0x8e, 0x50, 0x1c, 0x0a, 0xa7, 0x2f, 0x31, 0x6f, 0x0a, 0xe2, 0xc6,
	0x55, 0xb2, 0x0d, 0xb5, 0x04, 0x8c, 0x5b, 0x22, 0x01, 0xe8, 0x47, 0xd8, 0x29, 0x8b, 0x40, 0xcb,
	0x7f, 0x03, 0x90, 0xa2, 0x7a, 0x14, 0x4f, 0x65, 0xc4, 0x60, 0xa0, 0xa7, 0xf0, 0xa4, 0x50, 0xe1,
	0x59, 0x30, 0xf0, 0x5c, 0x63, 0x6b, 0xd9, 0xc9, 0xa9, 0x6d, 0x98, 0x7a, 0xf6, 0xff, 0xad, 0x41,
	0x03, 0x9b, 0xc0, 0xbd, 0x76, 0xbc, 0xc0, 0xbe, 0x38, 0x26, 0x3f, 0x41, 0xdd, 0x68, 0x79, 0xb2,
	0x81, 0x19, 0xc8, 0xfd, 0x3a, 0xd6, 0x66, 0x0e, 0xd7, 0x16, 0x7f, 0x86, 0x86, 0xfe, 0x5f, 0x75,
	0xf2, 0x37, 0x5a, 0x6a, 0xc3, 0x6c, 0xc5, 0x1b, 0x66, 0xeb, 0x24, 0xda, 0x30, 0x2d, 0xa5, 0x39,
	0xff, 0xa3, 0xb4, 0x61, 0xd1, 0xec, 0x4c, 0x82, 0x96, 0x0a, 0x5a, 0xdc, 0x6a, 0xe6, 0x09, 0x5a,
	0x45, 0x07, 0x2b, 0x9b, 0xd9, 0x5e, 0x4a, 0xdd, 0x28, 0xd7, 0xf2, 0x0a, 0x16, 0xe2, 0x52, 0x97,
	0x4a, 0xaf, 0x69, 0xe9, 0x6c, 0x17, 0xfd, 0x82, 0x21, 0x24, 0xe5, 0xbf, 0xd7, 0x76, 0xbe, 0x9d,
	0x2e, 0xf0, 0xaf, 0xce, 0xdd, 0xde, 0x5b, 0x85, 0xb7, 0xbe, 0xce, 0xc7, 0x76, 0x31, 0x51, 0x6b,
	0x3c, 0x88, 0xb6, 0x74, 0x79, 0xca, 0xc3, 0x9b, 0x8e, 0x23, 0x9d, 0x52, 0x97, 0x16, 0x23, 0x25,
	0x09, 0x57, 0x0f, 0x48, 0x7e, 0x7d, 0x22, 0x8f, 0xb5, 0xdb, 0xc5, 0x7b, 0x98, 0xb5, 0x53, 0x46,
	0xd6, 0x9e, 0xfc, 0x96, 0xdf, 0x95, 0x63, 0xcd, 0x5b, 0x71, 0x42, 0x0a, 0x16, 0x69, 0xeb, 0x51,
	0x72, 0x4b, 0xe5, 0x96, 0xe3, 0x43, 0x2c, 0x95, 0xea, 0xd8, 0x55, 0xb3, 0xa0, 0xb1, 0xec, 0x5a,
	0x16, 0xd4, 0x62, 0x3f, 0xc0, 0x43, 0xd5, 0xc2, 0x6d, 0x19, 0x6d, 0x20, 0x2a, 0xc7, 0xcb, 0x11,
	0xab, 0x01, 0x58, 0x25, 0xa9, 0x22, 0x7b, 0x00, 0x5d, 0x26, 0xf5, 0x2a, 0x4d, 0x48, 0x24, 0x96,
	0xdd, 0xab, 0xad, 0x46, 0x72, 0xa1, 0xbc, 0xe1, 0x83, 0x5b, 0xd2, 0xc6, 0xc0, 0x8d, 0x7f, 0x35,
	0x2d, 0x6c, 0xdc, 0xe4, 0xd3, 0xdb, 0xb5, 0x95, 0x9d, 0x01, 0xe4, 0x23, 0xac, 0x47, 0x9d, 0x9d,
	0x7b, 0xa6, 0x94, 0xd6, 0x13, 0x8b, 0x71, 0xc7, 0xb3, 0xe6, 0x10, 0xe6, 0xf5, 0x03, 0x49, 0x45,
	0x90, 0x7d, 0x2d, 0x95, 0xc6, 0x7e, 0x02, 0xcb, 0x53, 0x2f, 0x3a, 0x62, 0x65, 0x96, 0x91, 0xcc,
	0x33, 0x4f, 0xa5, 0x7f, 0xfa, 0x39, 0xf7, 0xa2, 0x42, 0xda, 0xb0, 0xd4, 0x65, 0xd2, 0x78, 0x2a,
	0x96, 0xc6, 0xa1, 0x13, 0x94, 0x7b, 0x7d, 0xf6, 0x1f, 0x20, 0xe3, 0xc1, 0xff, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xed, 0xf4, 0x07, 0x6c, 0xdd, 0x0e, 0x00, 0x00,
}
