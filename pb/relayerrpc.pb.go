// Code generated by protoc-gen-go. DO NOT EDIT.
// source: relayerrpc.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetStateKeyRequest struct {
	ShardID              uint64   `protobuf:"varint,1,opt,name=ShardID,proto3" json:"ShardID,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStateKeyRequest) Reset()         { *m = GetStateKeyRequest{} }
func (m *GetStateKeyRequest) String() string { return proto.CompactTextString(m) }
func (*GetStateKeyRequest) ProtoMessage()    {}
func (*GetStateKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3ab51536b4ede9, []int{0}
}

func (m *GetStateKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStateKeyRequest.Unmarshal(m, b)
}
func (m *GetStateKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStateKeyRequest.Marshal(b, m, deterministic)
}
func (m *GetStateKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStateKeyRequest.Merge(m, src)
}
func (m *GetStateKeyRequest) XXX_Size() int {
	return xxx_messageInfo_GetStateKeyRequest.Size(m)
}
func (m *GetStateKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStateKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStateKeyRequest proto.InternalMessageInfo

func (m *GetStateKeyRequest) GetShardID() uint64 {
	if m != nil {
		return m.ShardID
	}
	return 0
}

func (m *GetStateKeyRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type GetStateKeysRequest struct {
	ShardID              uint64   `protobuf:"varint,1,opt,name=ShardID,proto3" json:"ShardID,omitempty"`
	Key                  [][]byte `protobuf:"bytes,2,rep,name=Key,proto3" json:"Key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStateKeysRequest) Reset()         { *m = GetStateKeysRequest{} }
func (m *GetStateKeysRequest) String() string { return proto.CompactTextString(m) }
func (*GetStateKeysRequest) ProtoMessage()    {}
func (*GetStateKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3ab51536b4ede9, []int{1}
}

func (m *GetStateKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStateKeysRequest.Unmarshal(m, b)
}
func (m *GetStateKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStateKeysRequest.Marshal(b, m, deterministic)
}
func (m *GetStateKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStateKeysRequest.Merge(m, src)
}
func (m *GetStateKeysRequest) XXX_Size() int {
	return xxx_messageInfo_GetStateKeysRequest.Size(m)
}
func (m *GetStateKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStateKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStateKeysRequest proto.InternalMessageInfo

func (m *GetStateKeysRequest) GetShardID() uint64 {
	if m != nil {
		return m.ShardID
	}
	return 0
}

func (m *GetStateKeysRequest) GetKey() [][]byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type StateKey struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateKey) Reset()         { *m = StateKey{} }
func (m *StateKey) String() string { return proto.CompactTextString(m) }
func (*StateKey) ProtoMessage()    {}
func (*StateKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3ab51536b4ede9, []int{2}
}

func (m *StateKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateKey.Unmarshal(m, b)
}
func (m *StateKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateKey.Marshal(b, m, deterministic)
}
func (m *StateKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateKey.Merge(m, src)
}
func (m *StateKey) XXX_Size() int {
	return xxx_messageInfo_StateKey.Size(m)
}
func (m *StateKey) XXX_DiscardUnknown() {
	xxx_messageInfo_StateKey.DiscardUnknown(m)
}

var xxx_messageInfo_StateKey proto.InternalMessageInfo

func (m *StateKey) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type StateKeys struct {
	Values               [][]byte `protobuf:"bytes,2,rep,name=Values,proto3" json:"Values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateKeys) Reset()         { *m = StateKeys{} }
func (m *StateKeys) String() string { return proto.CompactTextString(m) }
func (*StateKeys) ProtoMessage()    {}
func (*StateKeys) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3ab51536b4ede9, []int{3}
}

func (m *StateKeys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateKeys.Unmarshal(m, b)
}
func (m *StateKeys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateKeys.Marshal(b, m, deterministic)
}
func (m *StateKeys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateKeys.Merge(m, src)
}
func (m *StateKeys) XXX_Size() int {
	return xxx_messageInfo_StateKeys.Size(m)
}
func (m *StateKeys) XXX_DiscardUnknown() {
	xxx_messageInfo_StateKeys.DiscardUnknown(m)
}

var xxx_messageInfo_StateKeys proto.InternalMessageInfo

func (m *StateKeys) GetValues() [][]byte {
	if m != nil {
		return m.Values
	}
	return nil
}

type SubmitTransactionRequest struct {
	Transaction          *ShardTransaction `protobuf:"bytes,1,opt,name=Transaction,proto3" json:"Transaction,omitempty"`
	ShardID              uint64            `protobuf:"varint,2,opt,name=ShardID,proto3" json:"ShardID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SubmitTransactionRequest) Reset()         { *m = SubmitTransactionRequest{} }
func (m *SubmitTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitTransactionRequest) ProtoMessage()    {}
func (*SubmitTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3ab51536b4ede9, []int{4}
}

func (m *SubmitTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTransactionRequest.Unmarshal(m, b)
}
func (m *SubmitTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTransactionRequest.Marshal(b, m, deterministic)
}
func (m *SubmitTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTransactionRequest.Merge(m, src)
}
func (m *SubmitTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitTransactionRequest.Size(m)
}
func (m *SubmitTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTransactionRequest proto.InternalMessageInfo

func (m *SubmitTransactionRequest) GetTransaction() *ShardTransaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *SubmitTransactionRequest) GetShardID() uint64 {
	if m != nil {
		return m.ShardID
	}
	return 0
}

func init() {
	proto.RegisterType((*GetStateKeyRequest)(nil), "pb.GetStateKeyRequest")
	proto.RegisterType((*GetStateKeysRequest)(nil), "pb.GetStateKeysRequest")
	proto.RegisterType((*StateKey)(nil), "pb.StateKey")
	proto.RegisterType((*StateKeys)(nil), "pb.StateKeys")
	proto.RegisterType((*SubmitTransactionRequest)(nil), "pb.SubmitTransactionRequest")
}

func init() { proto.RegisterFile("relayerrpc.proto", fileDescriptor_bf3ab51536b4ede9) }

var fileDescriptor_bf3ab51536b4ede9 = []byte{
	// 358 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x5f, 0x4f, 0xe2, 0x40,
	0x10, 0x0f, 0xe5, 0x0e, 0xee, 0x86, 0x5e, 0xc2, 0xcd, 0x71, 0xd8, 0x54, 0x63, 0x48, 0x7d, 0xe1,
	0xa9, 0x24, 0x10, 0x79, 0x96, 0xa0, 0x21, 0x04, 0x8d, 0xa6, 0x18, 0xdf, 0xdb, 0x32, 0xd6, 0x26,
	0xed, 0x6e, 0xed, 0x6e, 0x1f, 0xfa, 0x1d, 0xfd, 0x50, 0xa6, 0x5b, 0x6a, 0x56, 0x09, 0x0f, 0xbe,
	0xed, 0x6f, 0xf2, 0xfb, 0x33, 0xb3, 0x33, 0xd0, 0xcf, 0x29, 0xf1, 0x4b, 0xca, 0xf3, 0x2c, 0x74,
	0xb3, 0x9c, 0x4b, 0x8e, 0x46, 0x16, 0xd8, 0xa7, 0x11, 0xe7, 0x51, 0x42, 0x13, 0x55, 0x09, 0x8a,
	0xe7, 0x09, 0xa5, 0x99, 0x2c, 0x6b, 0x82, 0x6d, 0x86, 0x3c, 0x4d, 0x39, 0xab, 0x91, 0x73, 0x05,
	0xb8, 0x22, 0xb9, 0x95, 0xbe, 0xa4, 0x0d, 0x95, 0x1e, 0xbd, 0x16, 0x24, 0x24, 0x5a, 0xd0, 0xdd,
	0xbe, 0xf8, 0xf9, 0x6e, 0x7d, 0x6d, 0xb5, 0x46, 0xad, 0xf1, 0x0f, 0xaf, 0x81, 0xd8, 0x87, 0xf6,
	0x86, 0x4a, 0xcb, 0x18, 0xb5, 0xc6, 0xa6, 0x57, 0x3d, 0x9d, 0x05, 0xfc, 0xd3, 0x1c, 0xc4, 0x37,
	0x2c, 0xda, 0x8d, 0xc5, 0x08, 0x7e, 0x35, 0x7a, 0x1c, 0xc0, 0xcf, 0x27, 0x3f, 0x29, 0x48, 0xa9,
	0x4c, 0xaf, 0x06, 0xce, 0x05, 0xfc, 0xfe, 0x48, 0xc0, 0x21, 0x74, 0x54, 0x55, 0xec, 0x3d, 0xf6,
	0xc8, 0x49, 0xc0, 0xda, 0x16, 0x41, 0x1a, 0xcb, 0xc7, 0xdc, 0x67, 0xc2, 0x0f, 0x65, 0xcc, 0x59,
	0xd3, 0xce, 0x1c, 0x7a, 0x5a, 0x55, 0x99, 0xf7, 0xa6, 0x03, 0x37, 0x0b, 0x5c, 0xd5, 0x96, 0xae,
	0xd0, 0x89, 0xfa, 0x18, 0xc6, 0xa7, 0x31, 0xa6, 0x6f, 0x06, 0x80, 0x57, 0xff, 0xbe, 0xf7, 0xb0,
	0xc4, 0x35, 0xfc, 0x3d, 0x08, 0xc7, 0x33, 0x15, 0x70, 0xa4, 0x27, 0x7b, 0xe8, 0xd6, 0x7b, 0x72,
	0x9b, 0x3d, 0xb9, 0x37, 0xd5, 0x9e, 0xf0, 0x1e, 0xfe, 0xaf, 0x48, 0xde, 0xc6, 0x42, 0x12, 0x8b,
	0x59, 0xb4, 0xd8, 0xed, 0x72, 0x12, 0x82, 0x04, 0x1e, 0x11, 0xd8, 0xe7, 0x55, 0xcc, 0x21, 0xdf,
	0x23, 0x91, 0x71, 0x26, 0x08, 0x2f, 0xa1, 0xbb, 0xe4, 0x8c, 0x51, 0x28, 0x11, 0x2b, 0xea, 0x1e,
	0xdc, 0x91, 0x10, 0x7e, 0x44, 0x47, 0xfb, 0x98, 0x41, 0x4f, 0xdb, 0x2c, 0x0e, 0x2b, 0xe9, 0xe1,
	0xb1, 0xd8, 0xa6, 0x1a, 0xb2, 0x61, 0xcd, 0xc1, 0xd4, 0xcf, 0x01, 0x4f, 0xbe, 0xa8, 0x9a, 0x03,
	0xb1, 0xff, 0xe8, 0x32, 0x11, 0x74, 0x54, 0xf8, 0xec, 0x3d, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x17,
	0x7e, 0xc9, 0xd2, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RelayerRPCClient is the client API for RelayerRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RelayerRPCClient interface {
	SubmitTransaction(ctx context.Context, in *SubmitTransactionRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetListeningAddresses(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListeningAddressesResponse, error)
	Connect(ctx context.Context, in *ConnectMessage, opts ...grpc.CallOption) (*empty.Empty, error)
	GetStateKey(ctx context.Context, in *GetStateKeyRequest, opts ...grpc.CallOption) (*StateKey, error)
	GetStateKeys(ctx context.Context, in *GetStateKeysRequest, opts ...grpc.CallOption) (*StateKeys, error)
}

type relayerRPCClient struct {
	cc *grpc.ClientConn
}

func NewRelayerRPCClient(cc *grpc.ClientConn) RelayerRPCClient {
	return &relayerRPCClient{cc}
}

func (c *relayerRPCClient) SubmitTransaction(ctx context.Context, in *SubmitTransactionRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.RelayerRPC/SubmitTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relayerRPCClient) GetListeningAddresses(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListeningAddressesResponse, error) {
	out := new(ListeningAddressesResponse)
	err := c.cc.Invoke(ctx, "/pb.RelayerRPC/GetListeningAddresses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relayerRPCClient) Connect(ctx context.Context, in *ConnectMessage, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.RelayerRPC/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relayerRPCClient) GetStateKey(ctx context.Context, in *GetStateKeyRequest, opts ...grpc.CallOption) (*StateKey, error) {
	out := new(StateKey)
	err := c.cc.Invoke(ctx, "/pb.RelayerRPC/GetStateKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relayerRPCClient) GetStateKeys(ctx context.Context, in *GetStateKeysRequest, opts ...grpc.CallOption) (*StateKeys, error) {
	out := new(StateKeys)
	err := c.cc.Invoke(ctx, "/pb.RelayerRPC/GetStateKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RelayerRPCServer is the server API for RelayerRPC service.
type RelayerRPCServer interface {
	SubmitTransaction(context.Context, *SubmitTransactionRequest) (*empty.Empty, error)
	GetListeningAddresses(context.Context, *empty.Empty) (*ListeningAddressesResponse, error)
	Connect(context.Context, *ConnectMessage) (*empty.Empty, error)
	GetStateKey(context.Context, *GetStateKeyRequest) (*StateKey, error)
	GetStateKeys(context.Context, *GetStateKeysRequest) (*StateKeys, error)
}

// UnimplementedRelayerRPCServer can be embedded to have forward compatible implementations.
type UnimplementedRelayerRPCServer struct {
}

func (*UnimplementedRelayerRPCServer) SubmitTransaction(ctx context.Context, req *SubmitTransactionRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitTransaction not implemented")
}
func (*UnimplementedRelayerRPCServer) GetListeningAddresses(ctx context.Context, req *empty.Empty) (*ListeningAddressesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListeningAddresses not implemented")
}
func (*UnimplementedRelayerRPCServer) Connect(ctx context.Context, req *ConnectMessage) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedRelayerRPCServer) GetStateKey(ctx context.Context, req *GetStateKeyRequest) (*StateKey, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStateKey not implemented")
}
func (*UnimplementedRelayerRPCServer) GetStateKeys(ctx context.Context, req *GetStateKeysRequest) (*StateKeys, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStateKeys not implemented")
}

func RegisterRelayerRPCServer(s *grpc.Server, srv RelayerRPCServer) {
	s.RegisterService(&_RelayerRPC_serviceDesc, srv)
}

func _RelayerRPC_SubmitTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelayerRPCServer).SubmitTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RelayerRPC/SubmitTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelayerRPCServer).SubmitTransaction(ctx, req.(*SubmitTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelayerRPC_GetListeningAddresses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelayerRPCServer).GetListeningAddresses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RelayerRPC/GetListeningAddresses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelayerRPCServer).GetListeningAddresses(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelayerRPC_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelayerRPCServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RelayerRPC/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelayerRPCServer).Connect(ctx, req.(*ConnectMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelayerRPC_GetStateKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStateKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelayerRPCServer).GetStateKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RelayerRPC/GetStateKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelayerRPCServer).GetStateKey(ctx, req.(*GetStateKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelayerRPC_GetStateKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStateKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelayerRPCServer).GetStateKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.RelayerRPC/GetStateKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelayerRPCServer).GetStateKeys(ctx, req.(*GetStateKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RelayerRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.RelayerRPC",
	HandlerType: (*RelayerRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitTransaction",
			Handler:    _RelayerRPC_SubmitTransaction_Handler,
		},
		{
			MethodName: "GetListeningAddresses",
			Handler:    _RelayerRPC_GetListeningAddresses_Handler,
		},
		{
			MethodName: "Connect",
			Handler:    _RelayerRPC_Connect_Handler,
		},
		{
			MethodName: "GetStateKey",
			Handler:    _RelayerRPC_GetStateKey_Handler,
		},
		{
			MethodName: "GetStateKeys",
			Handler:    _RelayerRPC_GetStateKeys_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "relayerrpc.proto",
}
