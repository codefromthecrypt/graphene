// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shardrpc.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SlotNumberRequest struct {
	ShardID              uint64   `protobuf:"varint,1,opt,name=ShardID,proto3" json:"ShardID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlotNumberRequest) Reset()         { *m = SlotNumberRequest{} }
func (m *SlotNumberRequest) String() string { return proto.CompactTextString(m) }
func (*SlotNumberRequest) ProtoMessage()    {}
func (*SlotNumberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aefcd34784e5c0e, []int{0}
}

func (m *SlotNumberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlotNumberRequest.Unmarshal(m, b)
}
func (m *SlotNumberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlotNumberRequest.Marshal(b, m, deterministic)
}
func (m *SlotNumberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlotNumberRequest.Merge(m, src)
}
func (m *SlotNumberRequest) XXX_Size() int {
	return xxx_messageInfo_SlotNumberRequest.Size(m)
}
func (m *SlotNumberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SlotNumberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SlotNumberRequest proto.InternalMessageInfo

func (m *SlotNumberRequest) GetShardID() uint64 {
	if m != nil {
		return m.ShardID
	}
	return 0
}

type ShardActionStreamRequest struct {
	ShardID              uint64   `protobuf:"varint,1,opt,name=ShardID,proto3" json:"ShardID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShardActionStreamRequest) Reset()         { *m = ShardActionStreamRequest{} }
func (m *ShardActionStreamRequest) String() string { return proto.CompactTextString(m) }
func (*ShardActionStreamRequest) ProtoMessage()    {}
func (*ShardActionStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aefcd34784e5c0e, []int{1}
}

func (m *ShardActionStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardActionStreamRequest.Unmarshal(m, b)
}
func (m *ShardActionStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardActionStreamRequest.Marshal(b, m, deterministic)
}
func (m *ShardActionStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardActionStreamRequest.Merge(m, src)
}
func (m *ShardActionStreamRequest) XXX_Size() int {
	return xxx_messageInfo_ShardActionStreamRequest.Size(m)
}
func (m *ShardActionStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardActionStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShardActionStreamRequest proto.InternalMessageInfo

func (m *ShardActionStreamRequest) GetShardID() uint64 {
	if m != nil {
		return m.ShardID
	}
	return 0
}

// This message is used to signal a change in the shard chain. This will signify the latest block if Finalized is false
// and signify a finalized block if Finalized is true.
type ShardChainAction struct {
	AddBlockAction       *ActionAddBlock      `protobuf:"bytes,1,opt,name=AddBlockAction,proto3" json:"AddBlockAction,omitempty"`
	FinalizeBlockAction  *ActionFinalizeBlock `protobuf:"bytes,2,opt,name=FinalizeBlockAction,proto3" json:"FinalizeBlockAction,omitempty"`
	UpdateTip            *ActionUpdateTip     `protobuf:"bytes,3,opt,name=UpdateTip,proto3" json:"UpdateTip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ShardChainAction) Reset()         { *m = ShardChainAction{} }
func (m *ShardChainAction) String() string { return proto.CompactTextString(m) }
func (*ShardChainAction) ProtoMessage()    {}
func (*ShardChainAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aefcd34784e5c0e, []int{2}
}

func (m *ShardChainAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardChainAction.Unmarshal(m, b)
}
func (m *ShardChainAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardChainAction.Marshal(b, m, deterministic)
}
func (m *ShardChainAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardChainAction.Merge(m, src)
}
func (m *ShardChainAction) XXX_Size() int {
	return xxx_messageInfo_ShardChainAction.Size(m)
}
func (m *ShardChainAction) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardChainAction.DiscardUnknown(m)
}

var xxx_messageInfo_ShardChainAction proto.InternalMessageInfo

func (m *ShardChainAction) GetAddBlockAction() *ActionAddBlock {
	if m != nil {
		return m.AddBlockAction
	}
	return nil
}

func (m *ShardChainAction) GetFinalizeBlockAction() *ActionFinalizeBlock {
	if m != nil {
		return m.FinalizeBlockAction
	}
	return nil
}

func (m *ShardChainAction) GetUpdateTip() *ActionUpdateTip {
	if m != nil {
		return m.UpdateTip
	}
	return nil
}

type ActionAddBlock struct {
	Block                *ShardBlock `protobuf:"bytes,2,opt,name=Block,proto3" json:"Block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ActionAddBlock) Reset()         { *m = ActionAddBlock{} }
func (m *ActionAddBlock) String() string { return proto.CompactTextString(m) }
func (*ActionAddBlock) ProtoMessage()    {}
func (*ActionAddBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aefcd34784e5c0e, []int{3}
}

func (m *ActionAddBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionAddBlock.Unmarshal(m, b)
}
func (m *ActionAddBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionAddBlock.Marshal(b, m, deterministic)
}
func (m *ActionAddBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionAddBlock.Merge(m, src)
}
func (m *ActionAddBlock) XXX_Size() int {
	return xxx_messageInfo_ActionAddBlock.Size(m)
}
func (m *ActionAddBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionAddBlock.DiscardUnknown(m)
}

var xxx_messageInfo_ActionAddBlock proto.InternalMessageInfo

func (m *ActionAddBlock) GetBlock() *ShardBlock {
	if m != nil {
		return m.Block
	}
	return nil
}

type ActionFinalizeBlock struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Slot                 uint64   `protobuf:"varint,2,opt,name=Slot,proto3" json:"Slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionFinalizeBlock) Reset()         { *m = ActionFinalizeBlock{} }
func (m *ActionFinalizeBlock) String() string { return proto.CompactTextString(m) }
func (*ActionFinalizeBlock) ProtoMessage()    {}
func (*ActionFinalizeBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aefcd34784e5c0e, []int{4}
}

func (m *ActionFinalizeBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionFinalizeBlock.Unmarshal(m, b)
}
func (m *ActionFinalizeBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionFinalizeBlock.Marshal(b, m, deterministic)
}
func (m *ActionFinalizeBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionFinalizeBlock.Merge(m, src)
}
func (m *ActionFinalizeBlock) XXX_Size() int {
	return xxx_messageInfo_ActionFinalizeBlock.Size(m)
}
func (m *ActionFinalizeBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionFinalizeBlock.DiscardUnknown(m)
}

var xxx_messageInfo_ActionFinalizeBlock proto.InternalMessageInfo

func (m *ActionFinalizeBlock) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *ActionFinalizeBlock) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

type ActionUpdateTip struct {
	Hash                 []byte   `protobuf:"bytes,2,opt,name=Hash,proto3" json:"Hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionUpdateTip) Reset()         { *m = ActionUpdateTip{} }
func (m *ActionUpdateTip) String() string { return proto.CompactTextString(m) }
func (*ActionUpdateTip) ProtoMessage()    {}
func (*ActionUpdateTip) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aefcd34784e5c0e, []int{5}
}

func (m *ActionUpdateTip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionUpdateTip.Unmarshal(m, b)
}
func (m *ActionUpdateTip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionUpdateTip.Marshal(b, m, deterministic)
}
func (m *ActionUpdateTip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionUpdateTip.Merge(m, src)
}
func (m *ActionUpdateTip) XXX_Size() int {
	return xxx_messageInfo_ActionUpdateTip.Size(m)
}
func (m *ActionUpdateTip) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionUpdateTip.DiscardUnknown(m)
}

var xxx_messageInfo_ActionUpdateTip proto.InternalMessageInfo

func (m *ActionUpdateTip) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type BlockHashResponse struct {
	BlockHash            []byte   `protobuf:"bytes,1,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	StateHash            []byte   `protobuf:"bytes,2,opt,name=StateHash,proto3" json:"StateHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHashResponse) Reset()         { *m = BlockHashResponse{} }
func (m *BlockHashResponse) String() string { return proto.CompactTextString(m) }
func (*BlockHashResponse) ProtoMessage()    {}
func (*BlockHashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aefcd34784e5c0e, []int{6}
}

func (m *BlockHashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHashResponse.Unmarshal(m, b)
}
func (m *BlockHashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHashResponse.Marshal(b, m, deterministic)
}
func (m *BlockHashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHashResponse.Merge(m, src)
}
func (m *BlockHashResponse) XXX_Size() int {
	return xxx_messageInfo_BlockHashResponse.Size(m)
}
func (m *BlockHashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHashResponse proto.InternalMessageInfo

func (m *BlockHashResponse) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *BlockHashResponse) GetStateHash() []byte {
	if m != nil {
		return m.StateHash
	}
	return nil
}

type SlotRequest struct {
	Shard                uint64   `protobuf:"varint,1,opt,name=Shard,proto3" json:"Shard,omitempty"`
	Slot                 uint64   `protobuf:"varint,2,opt,name=Slot,proto3" json:"Slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlotRequest) Reset()         { *m = SlotRequest{} }
func (m *SlotRequest) String() string { return proto.CompactTextString(m) }
func (*SlotRequest) ProtoMessage()    {}
func (*SlotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aefcd34784e5c0e, []int{7}
}

func (m *SlotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlotRequest.Unmarshal(m, b)
}
func (m *SlotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlotRequest.Marshal(b, m, deterministic)
}
func (m *SlotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlotRequest.Merge(m, src)
}
func (m *SlotRequest) XXX_Size() int {
	return xxx_messageInfo_SlotRequest.Size(m)
}
func (m *SlotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SlotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SlotRequest proto.InternalMessageInfo

func (m *SlotRequest) GetShard() uint64 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *SlotRequest) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

type BlockGenerationRequest struct {
	Shard                uint64   `protobuf:"varint,1,opt,name=Shard,proto3" json:"Shard,omitempty"`
	Slot                 uint64   `protobuf:"varint,2,opt,name=Slot,proto3" json:"Slot,omitempty"`
	FinalizedBeaconHash  []byte   `protobuf:"bytes,3,opt,name=FinalizedBeaconHash,proto3" json:"FinalizedBeaconHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockGenerationRequest) Reset()         { *m = BlockGenerationRequest{} }
func (m *BlockGenerationRequest) String() string { return proto.CompactTextString(m) }
func (*BlockGenerationRequest) ProtoMessage()    {}
func (*BlockGenerationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aefcd34784e5c0e, []int{8}
}

func (m *BlockGenerationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockGenerationRequest.Unmarshal(m, b)
}
func (m *BlockGenerationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockGenerationRequest.Marshal(b, m, deterministic)
}
func (m *BlockGenerationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockGenerationRequest.Merge(m, src)
}
func (m *BlockGenerationRequest) XXX_Size() int {
	return xxx_messageInfo_BlockGenerationRequest.Size(m)
}
func (m *BlockGenerationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockGenerationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockGenerationRequest proto.InternalMessageInfo

func (m *BlockGenerationRequest) GetShard() uint64 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *BlockGenerationRequest) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *BlockGenerationRequest) GetFinalizedBeaconHash() []byte {
	if m != nil {
		return m.FinalizedBeaconHash
	}
	return nil
}

type ShardBlockSubmission struct {
	Block                *ShardBlock `protobuf:"bytes,1,opt,name=Block,proto3" json:"Block,omitempty"`
	Shard                uint64      `protobuf:"varint,2,opt,name=Shard,proto3" json:"Shard,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ShardBlockSubmission) Reset()         { *m = ShardBlockSubmission{} }
func (m *ShardBlockSubmission) String() string { return proto.CompactTextString(m) }
func (*ShardBlockSubmission) ProtoMessage()    {}
func (*ShardBlockSubmission) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aefcd34784e5c0e, []int{9}
}

func (m *ShardBlockSubmission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardBlockSubmission.Unmarshal(m, b)
}
func (m *ShardBlockSubmission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardBlockSubmission.Marshal(b, m, deterministic)
}
func (m *ShardBlockSubmission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardBlockSubmission.Merge(m, src)
}
func (m *ShardBlockSubmission) XXX_Size() int {
	return xxx_messageInfo_ShardBlockSubmission.Size(m)
}
func (m *ShardBlockSubmission) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardBlockSubmission.DiscardUnknown(m)
}

var xxx_messageInfo_ShardBlockSubmission proto.InternalMessageInfo

func (m *ShardBlockSubmission) GetBlock() *ShardBlock {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *ShardBlockSubmission) GetShard() uint64 {
	if m != nil {
		return m.Shard
	}
	return 0
}

type ProposalAnnouncement struct {
	ShardID              uint64   `protobuf:"varint,1,opt,name=ShardID,proto3" json:"ShardID,omitempty"`
	CrosslinkSlot        uint64   `protobuf:"varint,2,opt,name=CrosslinkSlot,proto3" json:"CrosslinkSlot,omitempty"`
	BlockHash            []byte   `protobuf:"bytes,3,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	StateHash            []byte   `protobuf:"bytes,4,opt,name=StateHash,proto3" json:"StateHash,omitempty"`
	ProposalSlots        []uint64 `protobuf:"varint,5,rep,packed,name=ProposalSlots,proto3" json:"ProposalSlots,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProposalAnnouncement) Reset()         { *m = ProposalAnnouncement{} }
func (m *ProposalAnnouncement) String() string { return proto.CompactTextString(m) }
func (*ProposalAnnouncement) ProtoMessage()    {}
func (*ProposalAnnouncement) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aefcd34784e5c0e, []int{10}
}

func (m *ProposalAnnouncement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposalAnnouncement.Unmarshal(m, b)
}
func (m *ProposalAnnouncement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposalAnnouncement.Marshal(b, m, deterministic)
}
func (m *ProposalAnnouncement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalAnnouncement.Merge(m, src)
}
func (m *ProposalAnnouncement) XXX_Size() int {
	return xxx_messageInfo_ProposalAnnouncement.Size(m)
}
func (m *ProposalAnnouncement) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalAnnouncement.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalAnnouncement proto.InternalMessageInfo

func (m *ProposalAnnouncement) GetShardID() uint64 {
	if m != nil {
		return m.ShardID
	}
	return 0
}

func (m *ProposalAnnouncement) GetCrosslinkSlot() uint64 {
	if m != nil {
		return m.CrosslinkSlot
	}
	return 0
}

func (m *ProposalAnnouncement) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *ProposalAnnouncement) GetStateHash() []byte {
	if m != nil {
		return m.StateHash
	}
	return nil
}

func (m *ProposalAnnouncement) GetProposalSlots() []uint64 {
	if m != nil {
		return m.ProposalSlots
	}
	return nil
}

type ShardUnsubscribeRequest struct {
	ShardID              uint64   `protobuf:"varint,1,opt,name=ShardID,proto3" json:"ShardID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShardUnsubscribeRequest) Reset()         { *m = ShardUnsubscribeRequest{} }
func (m *ShardUnsubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*ShardUnsubscribeRequest) ProtoMessage()    {}
func (*ShardUnsubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aefcd34784e5c0e, []int{11}
}

func (m *ShardUnsubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardUnsubscribeRequest.Unmarshal(m, b)
}
func (m *ShardUnsubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardUnsubscribeRequest.Marshal(b, m, deterministic)
}
func (m *ShardUnsubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardUnsubscribeRequest.Merge(m, src)
}
func (m *ShardUnsubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_ShardUnsubscribeRequest.Size(m)
}
func (m *ShardUnsubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardUnsubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShardUnsubscribeRequest proto.InternalMessageInfo

func (m *ShardUnsubscribeRequest) GetShardID() uint64 {
	if m != nil {
		return m.ShardID
	}
	return 0
}

type ShardTransactionSubmission struct {
	ShardID              uint64            `protobuf:"varint,1,opt,name=ShardID,proto3" json:"ShardID,omitempty"`
	Transaction          *ShardTransaction `protobuf:"bytes,2,opt,name=Transaction,proto3" json:"Transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ShardTransactionSubmission) Reset()         { *m = ShardTransactionSubmission{} }
func (m *ShardTransactionSubmission) String() string { return proto.CompactTextString(m) }
func (*ShardTransactionSubmission) ProtoMessage()    {}
func (*ShardTransactionSubmission) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aefcd34784e5c0e, []int{12}
}

func (m *ShardTransactionSubmission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardTransactionSubmission.Unmarshal(m, b)
}
func (m *ShardTransactionSubmission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardTransactionSubmission.Marshal(b, m, deterministic)
}
func (m *ShardTransactionSubmission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardTransactionSubmission.Merge(m, src)
}
func (m *ShardTransactionSubmission) XXX_Size() int {
	return xxx_messageInfo_ShardTransactionSubmission.Size(m)
}
func (m *ShardTransactionSubmission) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardTransactionSubmission.DiscardUnknown(m)
}

var xxx_messageInfo_ShardTransactionSubmission proto.InternalMessageInfo

func (m *ShardTransactionSubmission) GetShardID() uint64 {
	if m != nil {
		return m.ShardID
	}
	return 0
}

func (m *ShardTransactionSubmission) GetTransaction() *ShardTransaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func init() {
	proto.RegisterType((*SlotNumberRequest)(nil), "pb.SlotNumberRequest")
	proto.RegisterType((*ShardActionStreamRequest)(nil), "pb.ShardActionStreamRequest")
	proto.RegisterType((*ShardChainAction)(nil), "pb.ShardChainAction")
	proto.RegisterType((*ActionAddBlock)(nil), "pb.ActionAddBlock")
	proto.RegisterType((*ActionFinalizeBlock)(nil), "pb.ActionFinalizeBlock")
	proto.RegisterType((*ActionUpdateTip)(nil), "pb.ActionUpdateTip")
	proto.RegisterType((*BlockHashResponse)(nil), "pb.BlockHashResponse")
	proto.RegisterType((*SlotRequest)(nil), "pb.SlotRequest")
	proto.RegisterType((*BlockGenerationRequest)(nil), "pb.BlockGenerationRequest")
	proto.RegisterType((*ShardBlockSubmission)(nil), "pb.ShardBlockSubmission")
	proto.RegisterType((*ProposalAnnouncement)(nil), "pb.ProposalAnnouncement")
	proto.RegisterType((*ShardUnsubscribeRequest)(nil), "pb.ShardUnsubscribeRequest")
	proto.RegisterType((*ShardTransactionSubmission)(nil), "pb.ShardTransactionSubmission")
}

func init() { proto.RegisterFile("shardrpc.proto", fileDescriptor_0aefcd34784e5c0e) }

var fileDescriptor_0aefcd34784e5c0e = []byte{
	// 689 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xdd, 0x4e, 0x1b, 0x3b,
	0x10, 0x56, 0x7e, 0x38, 0x1c, 0x26, 0x10, 0xc0, 0x04, 0x88, 0xf6, 0xa0, 0x23, 0xb4, 0xe2, 0x48,
	0xe7, 0xa6, 0x81, 0x42, 0x4b, 0xa5, 0xaa, 0x3f, 0x0a, 0xa1, 0x4d, 0x91, 0xda, 0x82, 0x36, 0xf0,
	0x00, 0xde, 0xdd, 0x69, 0x58, 0xb1, 0x6b, 0x6f, 0xd7, 0xce, 0x45, 0xfb, 0x3e, 0x7d, 0x87, 0x3e,
	0x44, 0x1f, 0xaa, 0xb2, 0x9d, 0x5d, 0x6f, 0xc2, 0x06, 0xd4, 0x3b, 0x7b, 0x3c, 0xf3, 0xcd, 0x37,
	0xf3, 0xd9, 0x63, 0x68, 0x8b, 0x5b, 0x9a, 0x85, 0x59, 0x1a, 0xf4, 0xd2, 0x8c, 0x4b, 0x4e, 0xea,
	0xa9, 0xef, 0xfc, 0x33, 0xe6, 0x7c, 0x1c, 0xe3, 0xa1, 0xb6, 0xf8, 0x93, 0x2f, 0x87, 0x98, 0xa4,
	0xf2, 0x9b, 0x71, 0x70, 0x56, 0x03, 0x9e, 0x24, 0x9c, 0x99, 0x9d, 0xfb, 0x04, 0x36, 0x47, 0x31,
	0x97, 0x9f, 0x27, 0x89, 0x8f, 0x99, 0x87, 0x5f, 0x27, 0x28, 0x24, 0xe9, 0xc2, 0xf2, 0x48, 0xa1,
	0x5e, 0x9c, 0x77, 0x6b, 0xfb, 0xb5, 0xff, 0x9b, 0x5e, 0xbe, 0x75, 0x9f, 0x41, 0x57, 0x2f, 0xfb,
	0x81, 0x8c, 0x38, 0x1b, 0xc9, 0x0c, 0x69, 0xf2, 0x78, 0xd4, 0xaf, 0x1a, 0x6c, 0xe8, 0xf5, 0xe0,
	0x96, 0x46, 0xcc, 0xc4, 0x92, 0x97, 0xd0, 0xee, 0x87, 0xe1, 0x59, 0xcc, 0x83, 0x3b, 0x63, 0xd1,
	0x51, 0xad, 0x63, 0xd2, 0x4b, 0xfd, 0x9e, 0xb1, 0xe4, 0xe7, 0xde, 0x9c, 0x27, 0xb9, 0x80, 0xad,
	0xf7, 0x11, 0xa3, 0x71, 0xf4, 0x1d, 0xcb, 0x00, 0x75, 0x0d, 0xb0, 0x6b, 0x01, 0x66, 0x9c, 0xbc,
	0xaa, 0x18, 0xf2, 0x14, 0x56, 0x6e, 0xd2, 0x90, 0x4a, 0xbc, 0x8e, 0xd2, 0x6e, 0x43, 0x03, 0x6c,
	0x59, 0x80, 0xe2, 0xc8, 0xb3, 0x5e, 0xee, 0x29, 0xb4, 0x67, 0xf9, 0x91, 0x03, 0x58, 0xd2, 0x8b,
	0x29, 0x83, 0xb6, 0x02, 0xd0, 0x05, 0x9b, 0xc4, 0xe6, 0xd0, 0x7d, 0x0d, 0x5b, 0x15, 0xb4, 0x08,
	0x81, 0xe6, 0x07, 0x2a, 0x6e, 0x75, 0xf9, 0xab, 0x9e, 0x5e, 0x2b, 0x9b, 0x92, 0x45, 0xe3, 0x35,
	0x3d, 0xbd, 0x76, 0xff, 0x83, 0xf5, 0x39, 0x52, 0x45, 0x68, 0xdd, 0x86, 0xba, 0x97, 0xb0, 0xa9,
	0x71, 0xd5, 0xc6, 0x43, 0x91, 0x72, 0x26, 0x90, 0xec, 0xc1, 0x4a, 0x61, 0x9c, 0x26, 0xb2, 0x06,
	0x75, 0x3a, 0x92, 0x54, 0x62, 0x09, 0xcb, 0x1a, 0xdc, 0x17, 0xd0, 0x52, 0xf9, 0x73, 0x99, 0x3b,
	0xb0, 0xa4, 0x4b, 0x9b, 0x8a, 0x6c, 0x36, 0x95, 0x84, 0x25, 0xec, 0xe8, 0x1c, 0x43, 0x64, 0x98,
	0x51, 0xc5, 0xfc, 0x8f, 0x31, 0xc8, 0x91, 0x55, 0x3a, 0x3c, 0x43, 0x1a, 0x70, 0xa6, 0x49, 0x36,
	0x34, 0xc9, 0xaa, 0x23, 0xd7, 0x83, 0x8e, 0x6d, 0xfd, 0x68, 0xe2, 0x27, 0x91, 0x10, 0x4a, 0xe8,
	0x42, 0xa3, 0xda, 0x03, 0x1a, 0x59, 0x66, 0xf5, 0x12, 0x33, 0xf7, 0x67, 0x0d, 0x3a, 0x57, 0x19,
	0x4f, 0xb9, 0xa0, 0x71, 0x9f, 0x31, 0x3e, 0x61, 0x01, 0x26, 0xc8, 0x1e, 0xb8, 0xf3, 0xe4, 0x00,
	0xd6, 0x06, 0x19, 0x17, 0x22, 0x8e, 0xd8, 0x5d, 0xa9, 0xaa, 0x59, 0xe3, 0xac, 0x2e, 0x8d, 0x07,
	0x75, 0x69, 0xce, 0xe9, 0xa2, 0x32, 0xe4, 0x9c, 0x14, 0x96, 0xe8, 0x2e, 0xed, 0x37, 0x54, 0x86,
	0x19, 0xa3, 0x7b, 0x02, 0xbb, 0x9a, 0xd2, 0x0d, 0x13, 0x13, 0x5f, 0x04, 0x59, 0xe4, 0xe3, 0xe3,
	0x0f, 0x96, 0x81, 0xa3, 0x97, 0xd7, 0x19, 0x65, 0x82, 0x9a, 0xb7, 0x6e, 0x3b, 0xb9, 0xb8, 0xe8,
	0x53, 0x68, 0x95, 0x42, 0xa6, 0xaf, 0xa1, 0x53, 0x74, 0xba, 0x74, 0xe6, 0x95, 0x1d, 0x8f, 0x7f,
	0x34, 0xe1, 0x6f, 0xed, 0xe1, 0x5d, 0x0d, 0xc8, 0x39, 0x6c, 0xe4, 0x3d, 0xce, 0x4b, 0x21, 0x5d,
	0x85, 0x51, 0xa5, 0x80, 0xb3, 0xd3, 0x33, 0xc3, 0xae, 0x97, 0x0f, 0xbb, 0xde, 0x3b, 0x35, 0xec,
	0xc8, 0x2b, 0x20, 0x43, 0x94, 0x45, 0x2f, 0xfb, 0x52, 0xf7, 0x7b, 0x5d, 0x73, 0xb1, 0xb7, 0xd9,
	0xd9, 0x56, 0x86, 0xfb, 0xef, 0x65, 0x00, 0xdb, 0xd3, 0x5b, 0x6b, 0x1e, 0xe9, 0x35, 0x26, 0x69,
	0x4c, 0x25, 0x12, 0xa7, 0xf0, 0xbf, 0x77, 0xab, 0x9d, 0xb9, 0x2b, 0x45, 0xde, 0x42, 0x4b, 0x77,
	0xcd, 0xb0, 0x30, 0x35, 0x54, 0x5d, 0xcd, 0x85, 0x35, 0x0c, 0x61, 0x7d, 0x88, 0xb2, 0x3c, 0x6b,
	0xc9, 0x5e, 0x01, 0x52, 0x31, 0x82, 0x1d, 0xdb, 0xea, 0xd2, 0xa4, 0x3d, 0xaa, 0x91, 0x4b, 0x55,
	0x8e, 0xfc, 0x18, 0x09, 0x89, 0x2c, 0x62, 0xe3, 0x7e, 0x18, 0x66, 0x28, 0x04, 0x0a, 0xb2, 0x20,
	0xb3, 0xf3, 0xaf, 0x02, 0xba, 0xef, 0x5f, 0xf4, 0xe7, 0x39, 0x2c, 0x0f, 0x38, 0x63, 0x18, 0x48,
	0xa2, 0xe7, 0xf5, 0x74, 0xf3, 0x09, 0x85, 0xa0, 0x63, 0x5c, 0x58, 0xd0, 0x1b, 0x58, 0x1b, 0xa2,
	0xb4, 0x1f, 0x0e, 0xd9, 0xce, 0xf5, 0x98, 0xf9, 0x80, 0x9c, 0x9d, 0x79, 0xb3, 0x49, 0xeb, 0xff,
	0xa5, 0xf1, 0x4e, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x5b, 0xdd, 0xd3, 0xf5, 0x06, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ShardRPCClient is the client API for ShardRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShardRPCClient interface {
	AnnounceProposal(ctx context.Context, in *ProposalAnnouncement, opts ...grpc.CallOption) (*empty.Empty, error)
	GetBlockHashAtSlot(ctx context.Context, in *SlotRequest, opts ...grpc.CallOption) (*BlockHashResponse, error)
	GenerateBlockTemplate(ctx context.Context, in *BlockGenerationRequest, opts ...grpc.CallOption) (*ShardBlock, error)
	SubmitBlock(ctx context.Context, in *ShardBlockSubmission, opts ...grpc.CallOption) (*empty.Empty, error)
	GetActionStream(ctx context.Context, in *ShardActionStreamRequest, opts ...grpc.CallOption) (ShardRPC_GetActionStreamClient, error)
	GetListeningAddresses(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListeningAddressesResponse, error)
	Connect(ctx context.Context, in *ConnectMessage, opts ...grpc.CallOption) (*empty.Empty, error)
	GetSlotNumber(ctx context.Context, in *SlotNumberRequest, opts ...grpc.CallOption) (*SlotNumberResponse, error)
}

type shardRPCClient struct {
	cc *grpc.ClientConn
}

func NewShardRPCClient(cc *grpc.ClientConn) ShardRPCClient {
	return &shardRPCClient{cc}
}

func (c *shardRPCClient) AnnounceProposal(ctx context.Context, in *ProposalAnnouncement, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.ShardRPC/AnnounceProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shardRPCClient) GetBlockHashAtSlot(ctx context.Context, in *SlotRequest, opts ...grpc.CallOption) (*BlockHashResponse, error) {
	out := new(BlockHashResponse)
	err := c.cc.Invoke(ctx, "/pb.ShardRPC/GetBlockHashAtSlot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shardRPCClient) GenerateBlockTemplate(ctx context.Context, in *BlockGenerationRequest, opts ...grpc.CallOption) (*ShardBlock, error) {
	out := new(ShardBlock)
	err := c.cc.Invoke(ctx, "/pb.ShardRPC/GenerateBlockTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shardRPCClient) SubmitBlock(ctx context.Context, in *ShardBlockSubmission, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.ShardRPC/SubmitBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shardRPCClient) GetActionStream(ctx context.Context, in *ShardActionStreamRequest, opts ...grpc.CallOption) (ShardRPC_GetActionStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ShardRPC_serviceDesc.Streams[0], "/pb.ShardRPC/GetActionStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &shardRPCGetActionStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ShardRPC_GetActionStreamClient interface {
	Recv() (*ShardChainAction, error)
	grpc.ClientStream
}

type shardRPCGetActionStreamClient struct {
	grpc.ClientStream
}

func (x *shardRPCGetActionStreamClient) Recv() (*ShardChainAction, error) {
	m := new(ShardChainAction)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *shardRPCClient) GetListeningAddresses(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListeningAddressesResponse, error) {
	out := new(ListeningAddressesResponse)
	err := c.cc.Invoke(ctx, "/pb.ShardRPC/GetListeningAddresses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shardRPCClient) Connect(ctx context.Context, in *ConnectMessage, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.ShardRPC/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shardRPCClient) GetSlotNumber(ctx context.Context, in *SlotNumberRequest, opts ...grpc.CallOption) (*SlotNumberResponse, error) {
	out := new(SlotNumberResponse)
	err := c.cc.Invoke(ctx, "/pb.ShardRPC/GetSlotNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShardRPCServer is the server API for ShardRPC service.
type ShardRPCServer interface {
	AnnounceProposal(context.Context, *ProposalAnnouncement) (*empty.Empty, error)
	GetBlockHashAtSlot(context.Context, *SlotRequest) (*BlockHashResponse, error)
	GenerateBlockTemplate(context.Context, *BlockGenerationRequest) (*ShardBlock, error)
	SubmitBlock(context.Context, *ShardBlockSubmission) (*empty.Empty, error)
	GetActionStream(*ShardActionStreamRequest, ShardRPC_GetActionStreamServer) error
	GetListeningAddresses(context.Context, *empty.Empty) (*ListeningAddressesResponse, error)
	Connect(context.Context, *ConnectMessage) (*empty.Empty, error)
	GetSlotNumber(context.Context, *SlotNumberRequest) (*SlotNumberResponse, error)
}

// UnimplementedShardRPCServer can be embedded to have forward compatible implementations.
type UnimplementedShardRPCServer struct {
}

func (*UnimplementedShardRPCServer) AnnounceProposal(ctx context.Context, req *ProposalAnnouncement) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AnnounceProposal not implemented")
}
func (*UnimplementedShardRPCServer) GetBlockHashAtSlot(ctx context.Context, req *SlotRequest) (*BlockHashResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockHashAtSlot not implemented")
}
func (*UnimplementedShardRPCServer) GenerateBlockTemplate(ctx context.Context, req *BlockGenerationRequest) (*ShardBlock, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateBlockTemplate not implemented")
}
func (*UnimplementedShardRPCServer) SubmitBlock(ctx context.Context, req *ShardBlockSubmission) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitBlock not implemented")
}
func (*UnimplementedShardRPCServer) GetActionStream(req *ShardActionStreamRequest, srv ShardRPC_GetActionStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GetActionStream not implemented")
}
func (*UnimplementedShardRPCServer) GetListeningAddresses(ctx context.Context, req *empty.Empty) (*ListeningAddressesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListeningAddresses not implemented")
}
func (*UnimplementedShardRPCServer) Connect(ctx context.Context, req *ConnectMessage) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedShardRPCServer) GetSlotNumber(ctx context.Context, req *SlotNumberRequest) (*SlotNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSlotNumber not implemented")
}

func RegisterShardRPCServer(s *grpc.Server, srv ShardRPCServer) {
	s.RegisterService(&_ShardRPC_serviceDesc, srv)
}

func _ShardRPC_AnnounceProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProposalAnnouncement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShardRPCServer).AnnounceProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ShardRPC/AnnounceProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShardRPCServer).AnnounceProposal(ctx, req.(*ProposalAnnouncement))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShardRPC_GetBlockHashAtSlot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SlotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShardRPCServer).GetBlockHashAtSlot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ShardRPC/GetBlockHashAtSlot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShardRPCServer).GetBlockHashAtSlot(ctx, req.(*SlotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShardRPC_GenerateBlockTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockGenerationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShardRPCServer).GenerateBlockTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ShardRPC/GenerateBlockTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShardRPCServer).GenerateBlockTemplate(ctx, req.(*BlockGenerationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShardRPC_SubmitBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShardBlockSubmission)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShardRPCServer).SubmitBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ShardRPC/SubmitBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShardRPCServer).SubmitBlock(ctx, req.(*ShardBlockSubmission))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShardRPC_GetActionStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ShardActionStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ShardRPCServer).GetActionStream(m, &shardRPCGetActionStreamServer{stream})
}

type ShardRPC_GetActionStreamServer interface {
	Send(*ShardChainAction) error
	grpc.ServerStream
}

type shardRPCGetActionStreamServer struct {
	grpc.ServerStream
}

func (x *shardRPCGetActionStreamServer) Send(m *ShardChainAction) error {
	return x.ServerStream.SendMsg(m)
}

func _ShardRPC_GetListeningAddresses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShardRPCServer).GetListeningAddresses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ShardRPC/GetListeningAddresses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShardRPCServer).GetListeningAddresses(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShardRPC_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShardRPCServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ShardRPC/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShardRPCServer).Connect(ctx, req.(*ConnectMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShardRPC_GetSlotNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SlotNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShardRPCServer).GetSlotNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ShardRPC/GetSlotNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShardRPCServer).GetSlotNumber(ctx, req.(*SlotNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShardRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ShardRPC",
	HandlerType: (*ShardRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AnnounceProposal",
			Handler:    _ShardRPC_AnnounceProposal_Handler,
		},
		{
			MethodName: "GetBlockHashAtSlot",
			Handler:    _ShardRPC_GetBlockHashAtSlot_Handler,
		},
		{
			MethodName: "GenerateBlockTemplate",
			Handler:    _ShardRPC_GenerateBlockTemplate_Handler,
		},
		{
			MethodName: "SubmitBlock",
			Handler:    _ShardRPC_SubmitBlock_Handler,
		},
		{
			MethodName: "GetListeningAddresses",
			Handler:    _ShardRPC_GetListeningAddresses_Handler,
		},
		{
			MethodName: "Connect",
			Handler:    _ShardRPC_Connect_Handler,
		},
		{
			MethodName: "GetSlotNumber",
			Handler:    _ShardRPC_GetSlotNumber_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetActionStream",
			Handler:       _ShardRPC_GetActionStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "shardrpc.proto",
}
